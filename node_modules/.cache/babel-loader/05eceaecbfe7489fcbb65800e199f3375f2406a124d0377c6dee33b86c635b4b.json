{"ast":null,"code":"var _jsxFileName = \"/Users/giuseppebondi/Documents/GitHub/platform/src/components/EmuSchermo.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./EmuSchermo.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BUTTONS = {\n  A: 1,\n  B: 2,\n  START: 3,\n  SELECT: 4,\n  LEFT: 7,\n  RIGHT: 8\n};\nconst LEVEL = [{\n  type: \"p\",\n  height: 20,\n  posStartX: 30,\n  posEndX: 50\n}, {\n  type: \"p\",\n  height: 35,\n  posStartX: 50,\n  posEndX: 70\n}, {\n  type: \"s\",\n  height: 60,\n  posStartX: 70,\n  posEndX: 90\n}, {\n  type: \"p\",\n  height: 60,\n  posStartX: 20,\n  posEndX: 60\n}];\nfunction createSeededRandom(seed) {\n  // Implementazione di un generatore congruenziale lineare (LCG)\n  const a = 1664525;\n  const c = 1013904223;\n  const m = 2 ** 32;\n  let state = seed;\n  return function () {\n    state = (a * state + c) % m;\n    return state / m;\n  };\n}\nfunction generateLevel(seed) {\n  const rand = createSeededRandom(seed);\n  const platforms = [];\n  let currentHeight = 20;\n  const maxX = 100; // Larghezza massima del livello\n\n  // Parametri configurabili\n  const platformConfig = {\n    typeChance: {\n      p: 0.8,\n      s: 0.2\n    },\n    // Probabilit√† tipi piattaforma\n    heightRange: [10, 30],\n    // Range incremento altezza\n    widthRange: [20, 40],\n    // Range larghezza piattaforma\n    spacing: [20, 60] // Spaziatura orizzontale minima/massima\n  };\n\n  // Genera 4 piattaforme come nell'esempio\n  for (let i = 0; i < 4; i++) {\n    // Tipo piattaforma\n    const typeRand = rand();\n    const type = typeRand < platformConfig.typeChance.s ? 's' : 'p';\n\n    // Altezza\n    if (i > 0) {\n      const heightIncrement = Math.floor(rand() * (platformConfig.heightRange[1] - platformConfig.heightRange[0] + 1)) + platformConfig.heightRange[0];\n      currentHeight += heightIncrement;\n    }\n\n    // Larghezza piattaforma\n    const width = Math.floor(rand() * (platformConfig.widthRange[1] - platformConfig.widthRange[0] + 1)) + platformConfig.widthRange[0];\n\n    // Posizione X\n    const posStartX = Math.floor(rand() * (maxX - width));\n    const posEndX = posStartX + width;\n    platforms.push({\n      type: type,\n      height: currentHeight,\n      posStartX: posStartX,\n      posEndX: posEndX\n    });\n  }\n  return platforms;\n}\nconst generatedLevel = generateLevel(1);\nfunction EmuSchermo({\n  pressedButtons\n}) {\n  _s();\n  const ballSize = 4;\n  const horizontalAcceleration = 0.1;\n  const maxHorizontalSpeed = 1;\n  const friction = 0.2;\n  const jumpVelocity = 6;\n  const gravity = -0.5;\n  const [ball, setBall] = useState({\n    x: 2,\n    y: 0,\n    vx: 0,\n    vy: 0\n  });\n  const pressedButtonsRef = useRef(pressedButtons);\n  useEffect(() => {\n    pressedButtonsRef.current = pressedButtons;\n  }, [pressedButtons]);\n  const animationFrameId = useRef(null);\n  useEffect(() => {\n    const update = () => {\n      setBall(prev => {\n        let {\n          x,\n          y,\n          vx,\n          vy\n        } = prev;\n        const currentPressedButtons = pressedButtonsRef.current || {};\n\n        // Gestione input orizzontale\n        if (currentPressedButtons[BUTTONS.LEFT]) vx -= horizontalAcceleration;\n        if (currentPressedButtons[BUTTONS.RIGHT]) vx += horizontalAcceleration;\n        if (!currentPressedButtons[BUTTONS.LEFT] && !currentPressedButtons[BUTTONS.RIGHT]) {\n          vx = vx > 0 ? Math.max(vx - friction, 0) : Math.min(vx + friction, 0);\n        }\n        vx = Math.min(Math.max(vx, -maxHorizontalSpeed), maxHorizontalSpeed);\n\n        // Salto solo se a terra o su piattaforma\n        const isOnGroundOrPlatform = prev.y === 0 || LEVEL.some(p => {\n          const platformTop = p.height + 2; // Top della piattaforma (2% di spessore)\n          const horizontalOverlap = prev.x < p.posEndX && prev.x + ballSize > p.posStartX;\n          return prev.y === platformTop && horizontalOverlap;\n        });\n        if (currentPressedButtons[BUTTONS.A] && isOnGroundOrPlatform) {\n          vy = jumpVelocity;\n        }\n        vy += gravity;\n        let newY = y + vy;\n        let newX = x + vx;\n\n        // Collisioni con piattaforme\n        const sortedPlatforms = [...LEVEL].sort((a, b) => b.height - a.height);\n        let collided = false;\n        for (const platform of sortedPlatforms) {\n          const platformTop = platform.height + 2; // Top della piattaforma (2% di spessore)\n          const platformBottom = platform.height; // Base della piattaforma\n\n          // 1. Controllo overlap orizzontale\n          const horizontalOverlap = newX < platform.posEndX && newX + ballSize > platform.posStartX;\n\n          // 2. Controllo overlap verticale\n          const verticalOverlap = newY <= platformTop && newY + ballSize >= platformBottom;\n\n          // 3. Determinazione direzione collisione\n          if (horizontalOverlap && verticalOverlap) {\n            // Calcoliamo la penetrazione verticale\n            const prevBottom = prev.y + ballSize;\n            if (prevBottom <= platformBottom && vy > 0) {\n              // Collisione dal basso (salto contro piattaforma)\n              newY = platformBottom - ballSize;\n              vy = 0;\n            } else if (vy <= 0) {\n              // Collisione dall'alto (atterraggio su piattaforma)\n              newY = platformTop;\n              vy = 0;\n            }\n            collided = true;\n            break;\n          }\n        }\n\n        // Collisione con il terreno solo se non abbiamo colliso con piattaforme\n        if (!collided && newY < 0) {\n          newY = 0;\n          vy = 0;\n        }\n\n        // Clamping orizzontale\n        newX = Math.max(0, Math.min(newX, 100 - ballSize));\n        LEVEL.forEach(platform => {\n          if (platform.type === \"s\") {\n            const spikeLeft = platform.posStartX;\n            const spikeRight = platform.posEndX;\n            const spikeTop = platform.height + 3;\n            const spikeBottom = platform.height;\n            const horizontalCollision = x + ballSize > spikeLeft && x < spikeRight;\n            const verticalCollision = y < spikeTop && y + ballSize > spikeBottom && vy <= 0;\n            if (horizontalCollision && verticalCollision) {\n              newX = 2;\n              newY = 0;\n              vx = 0;\n              vy = 0;\n            }\n          }\n        });\n        return {\n          x: newX,\n          y: newY,\n          vx,\n          vy\n        };\n      });\n      animationFrameId.current = requestAnimationFrame(update);\n    };\n    animationFrameId.current = requestAnimationFrame(update);\n    return () => cancelAnimationFrame(animationFrameId.current);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"emu-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ball\",\n      style: {\n        left: `${ball.x}%`,\n        bottom: `${ball.y}%`,\n        width: `${ballSize}%`,\n        height: `${ballSize + 2}%`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this), LEVEL.map((item, i) => item.type === \"p\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"platform\",\n      style: {\n        left: `${item.posStartX}%`,\n        width: `${item.posEndX - item.posStartX}%`,\n        bottom: `${item.height}%`,\n        height: \"2%\"\n      }\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spike\",\n      style: {\n        left: `${item.posStartX}%`,\n        width: `${item.posEndX - item.posStartX}%`,\n        bottom: `${item.height}%`,\n        height: \"2%\"\n      }\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 231,\n    columnNumber: 5\n  }, this);\n}\n_s(EmuSchermo, \"oVJfAOUN3phdhXwpPFQ6ULRPGnU=\");\n_c = EmuSchermo;\nexport default EmuSchermo;\nvar _c;\n$RefreshReg$(_c, \"EmuSchermo\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","BUTTONS","A","B","START","SELECT","LEFT","RIGHT","LEVEL","type","height","posStartX","posEndX","createSeededRandom","seed","a","c","m","state","generateLevel","rand","platforms","currentHeight","maxX","platformConfig","typeChance","p","s","heightRange","widthRange","spacing","i","typeRand","heightIncrement","Math","floor","width","push","generatedLevel","EmuSchermo","pressedButtons","_s","ballSize","horizontalAcceleration","maxHorizontalSpeed","friction","jumpVelocity","gravity","ball","setBall","x","y","vx","vy","pressedButtonsRef","current","animationFrameId","update","prev","currentPressedButtons","max","min","isOnGroundOrPlatform","some","platformTop","horizontalOverlap","newY","newX","sortedPlatforms","sort","b","collided","platform","platformBottom","verticalOverlap","prevBottom","forEach","spikeLeft","spikeRight","spikeTop","spikeBottom","horizontalCollision","verticalCollision","requestAnimationFrame","cancelAnimationFrame","className","children","style","left","bottom","fileName","_jsxFileName","lineNumber","columnNumber","map","item","_c","$RefreshReg$"],"sources":["/Users/giuseppebondi/Documents/GitHub/platform/src/components/EmuSchermo.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport \"./EmuSchermo.css\";\n\nconst BUTTONS = {\n  A: 1,\n  B: 2,\n  START: 3,\n  SELECT: 4,\n  LEFT: 7,\n  RIGHT: 8,\n};\n\nconst LEVEL = [\n  { type: \"p\", height: 20, posStartX: 30, posEndX: 50 },\n  { type: \"p\", height: 35, posStartX: 50, posEndX: 70 },\n  { type: \"s\", height: 60, posStartX: 70, posEndX: 90 },\n  { type: \"p\", height: 60, posStartX: 20, posEndX: 60 },\n];\n\n\nfunction createSeededRandom(seed) {\n    // Implementazione di un generatore congruenziale lineare (LCG)\n    const a = 1664525;\n    const c = 1013904223;\n    const m = 2**32;\n    let state = seed;\n    \n    return function() {\n        state = (a * state + c) % m;\n        return state / m;\n    };\n}\n\nfunction generateLevel(seed) {\n    const rand = createSeededRandom(seed);\n    const platforms = [];\n    let currentHeight = 20;\n    const maxX = 100;  // Larghezza massima del livello\n    \n    // Parametri configurabili\n    const platformConfig = {\n        typeChance: { p: 0.8, s: 0.2 },      // Probabilit√† tipi piattaforma\n        heightRange: [10, 30],               // Range incremento altezza\n        widthRange: [20, 40],               // Range larghezza piattaforma\n        spacing: [20, 60]                  // Spaziatura orizzontale minima/massima\n    };\n\n    // Genera 4 piattaforme come nell'esempio\n    for (let i = 0; i < 4; i++) {\n        // Tipo piattaforma\n        const typeRand = rand();\n        const type = typeRand < platformConfig.typeChance.s ? 's' : 'p';\n\n        // Altezza\n        if (i > 0) {\n            const heightIncrement = Math.floor(\n                rand() * (platformConfig.heightRange[1] - platformConfig.heightRange[0] + 1)\n            ) + platformConfig.heightRange[0];\n            currentHeight += heightIncrement;\n        }\n\n        // Larghezza piattaforma\n        const width = Math.floor(\n            rand() * (platformConfig.widthRange[1] - platformConfig.widthRange[0] + 1)\n        ) + platformConfig.widthRange[0];\n\n        // Posizione X\n        const posStartX = Math.floor(rand() * (maxX - width));\n        const posEndX = posStartX + width;\n\n        platforms.push({\n            type: type,\n            height: currentHeight,\n            posStartX: posStartX,\n            posEndX: posEndX\n        });\n    }\n\n    return platforms;\n}\n\nconst generatedLevel = generateLevel(1);\n\nfunction EmuSchermo({ pressedButtons }) {\n  const ballSize = 4;\n  const horizontalAcceleration = 0.1;\n  const maxHorizontalSpeed = 1;\n  const friction = 0.2;\n  const jumpVelocity = 6;\n  const gravity = -0.5;\n\n  const [ball, setBall] = useState({\n    x: 2,\n    y: 0,\n    vx: 0,\n    vy: 0,\n  });\n\n  const pressedButtonsRef = useRef(pressedButtons);\n  useEffect(() => {\n    pressedButtonsRef.current = pressedButtons;\n  }, [pressedButtons]);\n\n  const animationFrameId = useRef(null);\n\n  useEffect(() => {\n    const update = () => {\n      setBall((prev) => {\n        let { x, y, vx, vy } = prev;\n        const currentPressedButtons = pressedButtonsRef.current || {};\n\n        // Gestione input orizzontale\n        if (currentPressedButtons[BUTTONS.LEFT]) vx -= horizontalAcceleration;\n        if (currentPressedButtons[BUTTONS.RIGHT]) vx += horizontalAcceleration;\n\n        if (!currentPressedButtons[BUTTONS.LEFT] && !currentPressedButtons[BUTTONS.RIGHT]) {\n          vx = vx > 0 ? Math.max(vx - friction, 0) : Math.min(vx + friction, 0);\n        }\n\n        vx = Math.min(Math.max(vx, -maxHorizontalSpeed), maxHorizontalSpeed);\n\n        // Salto solo se a terra o su piattaforma\n        const isOnGroundOrPlatform = \n        prev.y === 0 || \n        LEVEL.some(p => {\n          const platformTop = p.height + 2; // Top della piattaforma (2% di spessore)\n          const horizontalOverlap = (\n            prev.x < p.posEndX && \n            (prev.x + ballSize) > p.posStartX\n          );\n          return prev.y === platformTop && horizontalOverlap;\n        });\n        if (currentPressedButtons[BUTTONS.A] && isOnGroundOrPlatform) {\n          vy = jumpVelocity;\n        }\n\n        vy += gravity;\n        let newY = y + vy;\n        let newX = x + vx;\n\n    // Collisioni con piattaforme\nconst sortedPlatforms = [...LEVEL].sort((a, b) => b.height - a.height);\nlet collided = false;\n\nfor (const platform of sortedPlatforms) {\n    const platformTop = platform.height +2; // Top della piattaforma (2% di spessore)\n    const platformBottom = platform.height;   // Base della piattaforma\n    \n    // 1. Controllo overlap orizzontale\n    const horizontalOverlap = (\n        newX < platform.posEndX && \n        (newX + ballSize) > platform.posStartX\n    );\n    \n    // 2. Controllo overlap verticale\n    const verticalOverlap = (\n        newY <= platformTop && \n        (newY + ballSize) >= platformBottom\n    );\n    \n    // 3. Determinazione direzione collisione\n    if (horizontalOverlap && verticalOverlap) {\n        // Calcoliamo la penetrazione verticale\n        const prevBottom = prev.y + ballSize;\n        \n        if (prevBottom <= platformBottom && vy > 0) {\n            // Collisione dal basso (salto contro piattaforma)\n            newY = platformBottom - ballSize;\n            vy = 0;\n        } else if (vy <= 0) {\n            // Collisione dall'alto (atterraggio su piattaforma)\n            newY = platformTop;\n            vy = 0;\n        }\n        \n        collided = true;\n        break;\n    }\n}\n\n        // Collisione con il terreno solo se non abbiamo colliso con piattaforme\n        if (!collided && newY < 0) {\n            newY = 0;\n            vy = 0;\n        }\n\n        // Clamping orizzontale\n        newX = Math.max(0, Math.min(newX, 100 - ballSize));\n\n\n        LEVEL.forEach(platform => {\n            if (platform.type === \"s\") {\n              const spikeLeft = platform.posStartX;\n              const spikeRight = platform.posEndX;\n              const spikeTop = platform.height + 3;\n              const spikeBottom = platform.height;\n  \n              const horizontalCollision = (\n                x + ballSize > spikeLeft && \n                x < spikeRight\n              );\n              \n              const verticalCollision = (\n                y < spikeTop && \n                y + ballSize > spikeBottom &&\n                vy <=0\n              );\n  \n              if (horizontalCollision && verticalCollision) {\n                newX = 2 ; \n                newY = 0;\n                vx = 0;\n                vy = 0;\n              }\n            }\n          });\n        return { x: newX, y: newY, vx, vy };\n\n      });\n      animationFrameId.current = requestAnimationFrame(update);\n    };\n\n    animationFrameId.current = requestAnimationFrame(update);\n    return () => cancelAnimationFrame(animationFrameId.current);\n\n\n\n  }, []);\n\n  return (\n    <div className=\"emu-container\">\n\n      \n      <div\n        className=\"ball\"\n        style={{\n          left: `${ball.x}%`,\n          bottom: `${ball.y}%`,\n          width: `${ballSize}%`,\n          height: `${ballSize +2 }%`,\n        }}\n      ></div>\n\n      {LEVEL.map((item, i) => (\n        item.type === \"p\" ? (\n          <div\n            key={i}\n            className=\"platform\"\n            style={{\n              left: `${item.posStartX}%`,\n              width: `${item.posEndX - item.posStartX}%`,\n              bottom: `${item.height}%`,\n              height: \"2%\",\n            }}\n          />\n        ) : (\n          <div\n            key={i}\n            className=\"spike\"\n            style={{\n              left: `${item.posStartX}%`,\n              width: `${item.posEndX - item.posStartX}%`,\n              bottom: `${item.height}%`,\n              height: \"2%\",\n            }}\n          />\n        )\n      ))}\n    </div>\n  );\n}\n\nexport default EmuSchermo;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,OAAO,GAAG;EACdC,CAAC,EAAE,CAAC;EACJC,CAAC,EAAE,CAAC;EACJC,KAAK,EAAE,CAAC;EACRC,MAAM,EAAE,CAAC;EACTC,IAAI,EAAE,CAAC;EACPC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,KAAK,GAAG,CACZ;EAAEC,IAAI,EAAE,GAAG;EAAEC,MAAM,EAAE,EAAE;EAAEC,SAAS,EAAE,EAAE;EAAEC,OAAO,EAAE;AAAG,CAAC,EACrD;EAAEH,IAAI,EAAE,GAAG;EAAEC,MAAM,EAAE,EAAE;EAAEC,SAAS,EAAE,EAAE;EAAEC,OAAO,EAAE;AAAG,CAAC,EACrD;EAAEH,IAAI,EAAE,GAAG;EAAEC,MAAM,EAAE,EAAE;EAAEC,SAAS,EAAE,EAAE;EAAEC,OAAO,EAAE;AAAG,CAAC,EACrD;EAAEH,IAAI,EAAE,GAAG;EAAEC,MAAM,EAAE,EAAE;EAAEC,SAAS,EAAE,EAAE;EAAEC,OAAO,EAAE;AAAG,CAAC,CACtD;AAGD,SAASC,kBAAkBA,CAACC,IAAI,EAAE;EAC9B;EACA,MAAMC,CAAC,GAAG,OAAO;EACjB,MAAMC,CAAC,GAAG,UAAU;EACpB,MAAMC,CAAC,GAAG,CAAC,IAAE,EAAE;EACf,IAAIC,KAAK,GAAGJ,IAAI;EAEhB,OAAO,YAAW;IACdI,KAAK,GAAG,CAACH,CAAC,GAAGG,KAAK,GAAGF,CAAC,IAAIC,CAAC;IAC3B,OAAOC,KAAK,GAAGD,CAAC;EACpB,CAAC;AACL;AAEA,SAASE,aAAaA,CAACL,IAAI,EAAE;EACzB,MAAMM,IAAI,GAAGP,kBAAkB,CAACC,IAAI,CAAC;EACrC,MAAMO,SAAS,GAAG,EAAE;EACpB,IAAIC,aAAa,GAAG,EAAE;EACtB,MAAMC,IAAI,GAAG,GAAG,CAAC,CAAE;;EAEnB;EACA,MAAMC,cAAc,GAAG;IACnBC,UAAU,EAAE;MAAEC,CAAC,EAAE,GAAG;MAAEC,CAAC,EAAE;IAAI,CAAC;IAAO;IACrCC,WAAW,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;IAAgB;IACrCC,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;IAAgB;IACpCC,OAAO,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAkB;EACvC,CAAC;;EAED;EACA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;IACxB;IACA,MAAMC,QAAQ,GAAGZ,IAAI,CAAC,CAAC;IACvB,MAAMX,IAAI,GAAGuB,QAAQ,GAAGR,cAAc,CAACC,UAAU,CAACE,CAAC,GAAG,GAAG,GAAG,GAAG;;IAE/D;IACA,IAAII,CAAC,GAAG,CAAC,EAAE;MACP,MAAME,eAAe,GAAGC,IAAI,CAACC,KAAK,CAC9Bf,IAAI,CAAC,CAAC,IAAII,cAAc,CAACI,WAAW,CAAC,CAAC,CAAC,GAAGJ,cAAc,CAACI,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,CAC/E,CAAC,GAAGJ,cAAc,CAACI,WAAW,CAAC,CAAC,CAAC;MACjCN,aAAa,IAAIW,eAAe;IACpC;;IAEA;IACA,MAAMG,KAAK,GAAGF,IAAI,CAACC,KAAK,CACpBf,IAAI,CAAC,CAAC,IAAII,cAAc,CAACK,UAAU,CAAC,CAAC,CAAC,GAAGL,cAAc,CAACK,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,CAC7E,CAAC,GAAGL,cAAc,CAACK,UAAU,CAAC,CAAC,CAAC;;IAEhC;IACA,MAAMlB,SAAS,GAAGuB,IAAI,CAACC,KAAK,CAACf,IAAI,CAAC,CAAC,IAAIG,IAAI,GAAGa,KAAK,CAAC,CAAC;IACrD,MAAMxB,OAAO,GAAGD,SAAS,GAAGyB,KAAK;IAEjCf,SAAS,CAACgB,IAAI,CAAC;MACX5B,IAAI,EAAEA,IAAI;MACVC,MAAM,EAAEY,aAAa;MACrBX,SAAS,EAAEA,SAAS;MACpBC,OAAO,EAAEA;IACb,CAAC,CAAC;EACN;EAEA,OAAOS,SAAS;AACpB;AAEA,MAAMiB,cAAc,GAAGnB,aAAa,CAAC,CAAC,CAAC;AAEvC,SAASoB,UAAUA,CAAC;EAAEC;AAAe,CAAC,EAAE;EAAAC,EAAA;EACtC,MAAMC,QAAQ,GAAG,CAAC;EAClB,MAAMC,sBAAsB,GAAG,GAAG;EAClC,MAAMC,kBAAkB,GAAG,CAAC;EAC5B,MAAMC,QAAQ,GAAG,GAAG;EACpB,MAAMC,YAAY,GAAG,CAAC;EACtB,MAAMC,OAAO,GAAG,CAAC,GAAG;EAEpB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGrD,QAAQ,CAAC;IAC/BsD,CAAC,EAAE,CAAC;IACJC,CAAC,EAAE,CAAC;IACJC,EAAE,EAAE,CAAC;IACLC,EAAE,EAAE;EACN,CAAC,CAAC;EAEF,MAAMC,iBAAiB,GAAGxD,MAAM,CAAC0C,cAAc,CAAC;EAChD3C,SAAS,CAAC,MAAM;IACdyD,iBAAiB,CAACC,OAAO,GAAGf,cAAc;EAC5C,CAAC,EAAE,CAACA,cAAc,CAAC,CAAC;EAEpB,MAAMgB,gBAAgB,GAAG1D,MAAM,CAAC,IAAI,CAAC;EAErCD,SAAS,CAAC,MAAM;IACd,MAAM4D,MAAM,GAAGA,CAAA,KAAM;MACnBR,OAAO,CAAES,IAAI,IAAK;QAChB,IAAI;UAAER,CAAC;UAAEC,CAAC;UAAEC,EAAE;UAAEC;QAAG,CAAC,GAAGK,IAAI;QAC3B,MAAMC,qBAAqB,GAAGL,iBAAiB,CAACC,OAAO,IAAI,CAAC,CAAC;;QAE7D;QACA,IAAII,qBAAqB,CAAC1D,OAAO,CAACK,IAAI,CAAC,EAAE8C,EAAE,IAAIT,sBAAsB;QACrE,IAAIgB,qBAAqB,CAAC1D,OAAO,CAACM,KAAK,CAAC,EAAE6C,EAAE,IAAIT,sBAAsB;QAEtE,IAAI,CAACgB,qBAAqB,CAAC1D,OAAO,CAACK,IAAI,CAAC,IAAI,CAACqD,qBAAqB,CAAC1D,OAAO,CAACM,KAAK,CAAC,EAAE;UACjF6C,EAAE,GAAGA,EAAE,GAAG,CAAC,GAAGlB,IAAI,CAAC0B,GAAG,CAACR,EAAE,GAAGP,QAAQ,EAAE,CAAC,CAAC,GAAGX,IAAI,CAAC2B,GAAG,CAACT,EAAE,GAAGP,QAAQ,EAAE,CAAC,CAAC;QACvE;QAEAO,EAAE,GAAGlB,IAAI,CAAC2B,GAAG,CAAC3B,IAAI,CAAC0B,GAAG,CAACR,EAAE,EAAE,CAACR,kBAAkB,CAAC,EAAEA,kBAAkB,CAAC;;QAEpE;QACA,MAAMkB,oBAAoB,GAC1BJ,IAAI,CAACP,CAAC,KAAK,CAAC,IACZ3C,KAAK,CAACuD,IAAI,CAACrC,CAAC,IAAI;UACd,MAAMsC,WAAW,GAAGtC,CAAC,CAAChB,MAAM,GAAG,CAAC,CAAC,CAAC;UAClC,MAAMuD,iBAAiB,GACrBP,IAAI,CAACR,CAAC,GAAGxB,CAAC,CAACd,OAAO,IACjB8C,IAAI,CAACR,CAAC,GAAGR,QAAQ,GAAIhB,CAAC,CAACf,SACzB;UACD,OAAO+C,IAAI,CAACP,CAAC,KAAKa,WAAW,IAAIC,iBAAiB;QACpD,CAAC,CAAC;QACF,IAAIN,qBAAqB,CAAC1D,OAAO,CAACC,CAAC,CAAC,IAAI4D,oBAAoB,EAAE;UAC5DT,EAAE,GAAGP,YAAY;QACnB;QAEAO,EAAE,IAAIN,OAAO;QACb,IAAImB,IAAI,GAAGf,CAAC,GAAGE,EAAE;QACjB,IAAIc,IAAI,GAAGjB,CAAC,GAAGE,EAAE;;QAErB;QACJ,MAAMgB,eAAe,GAAG,CAAC,GAAG5D,KAAK,CAAC,CAAC6D,IAAI,CAAC,CAACtD,CAAC,EAAEuD,CAAC,KAAKA,CAAC,CAAC5D,MAAM,GAAGK,CAAC,CAACL,MAAM,CAAC;QACtE,IAAI6D,QAAQ,GAAG,KAAK;QAEpB,KAAK,MAAMC,QAAQ,IAAIJ,eAAe,EAAE;UACpC,MAAMJ,WAAW,GAAGQ,QAAQ,CAAC9D,MAAM,GAAE,CAAC,CAAC,CAAC;UACxC,MAAM+D,cAAc,GAAGD,QAAQ,CAAC9D,MAAM,CAAC,CAAG;;UAE1C;UACA,MAAMuD,iBAAiB,GACnBE,IAAI,GAAGK,QAAQ,CAAC5D,OAAO,IACtBuD,IAAI,GAAGzB,QAAQ,GAAI8B,QAAQ,CAAC7D,SAChC;;UAED;UACA,MAAM+D,eAAe,GACjBR,IAAI,IAAIF,WAAW,IAClBE,IAAI,GAAGxB,QAAQ,IAAK+B,cACxB;;UAED;UACA,IAAIR,iBAAiB,IAAIS,eAAe,EAAE;YACtC;YACA,MAAMC,UAAU,GAAGjB,IAAI,CAACP,CAAC,GAAGT,QAAQ;YAEpC,IAAIiC,UAAU,IAAIF,cAAc,IAAIpB,EAAE,GAAG,CAAC,EAAE;cACxC;cACAa,IAAI,GAAGO,cAAc,GAAG/B,QAAQ;cAChCW,EAAE,GAAG,CAAC;YACV,CAAC,MAAM,IAAIA,EAAE,IAAI,CAAC,EAAE;cAChB;cACAa,IAAI,GAAGF,WAAW;cAClBX,EAAE,GAAG,CAAC;YACV;YAEAkB,QAAQ,GAAG,IAAI;YACf;UACJ;QACJ;;QAEQ;QACA,IAAI,CAACA,QAAQ,IAAIL,IAAI,GAAG,CAAC,EAAE;UACvBA,IAAI,GAAG,CAAC;UACRb,EAAE,GAAG,CAAC;QACV;;QAEA;QACAc,IAAI,GAAGjC,IAAI,CAAC0B,GAAG,CAAC,CAAC,EAAE1B,IAAI,CAAC2B,GAAG,CAACM,IAAI,EAAE,GAAG,GAAGzB,QAAQ,CAAC,CAAC;QAGlDlC,KAAK,CAACoE,OAAO,CAACJ,QAAQ,IAAI;UACtB,IAAIA,QAAQ,CAAC/D,IAAI,KAAK,GAAG,EAAE;YACzB,MAAMoE,SAAS,GAAGL,QAAQ,CAAC7D,SAAS;YACpC,MAAMmE,UAAU,GAAGN,QAAQ,CAAC5D,OAAO;YACnC,MAAMmE,QAAQ,GAAGP,QAAQ,CAAC9D,MAAM,GAAG,CAAC;YACpC,MAAMsE,WAAW,GAAGR,QAAQ,CAAC9D,MAAM;YAEnC,MAAMuE,mBAAmB,GACvB/B,CAAC,GAAGR,QAAQ,GAAGmC,SAAS,IACxB3B,CAAC,GAAG4B,UACL;YAED,MAAMI,iBAAiB,GACrB/B,CAAC,GAAG4B,QAAQ,IACZ5B,CAAC,GAAGT,QAAQ,GAAGsC,WAAW,IAC1B3B,EAAE,IAAG,CACN;YAED,IAAI4B,mBAAmB,IAAIC,iBAAiB,EAAE;cAC5Cf,IAAI,GAAG,CAAC;cACRD,IAAI,GAAG,CAAC;cACRd,EAAE,GAAG,CAAC;cACNC,EAAE,GAAG,CAAC;YACR;UACF;QACF,CAAC,CAAC;QACJ,OAAO;UAAEH,CAAC,EAAEiB,IAAI;UAAEhB,CAAC,EAAEe,IAAI;UAAEd,EAAE;UAAEC;QAAG,CAAC;MAErC,CAAC,CAAC;MACFG,gBAAgB,CAACD,OAAO,GAAG4B,qBAAqB,CAAC1B,MAAM,CAAC;IAC1D,CAAC;IAEDD,gBAAgB,CAACD,OAAO,GAAG4B,qBAAqB,CAAC1B,MAAM,CAAC;IACxD,OAAO,MAAM2B,oBAAoB,CAAC5B,gBAAgB,CAACD,OAAO,CAAC;EAI7D,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEvD,OAAA;IAAKqF,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAG5BtF,OAAA;MACEqF,SAAS,EAAC,MAAM;MAChBE,KAAK,EAAE;QACLC,IAAI,EAAE,GAAGxC,IAAI,CAACE,CAAC,GAAG;QAClBuC,MAAM,EAAE,GAAGzC,IAAI,CAACG,CAAC,GAAG;QACpBf,KAAK,EAAE,GAAGM,QAAQ,GAAG;QACrBhC,MAAM,EAAE,GAAGgC,QAAQ,GAAE,CAAC;MACxB;IAAE;MAAAgD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,EAENrF,KAAK,CAACsF,GAAG,CAAC,CAACC,IAAI,EAAEhE,CAAC,KACjBgE,IAAI,CAACtF,IAAI,KAAK,GAAG,gBACfT,OAAA;MAEEqF,SAAS,EAAC,UAAU;MACpBE,KAAK,EAAE;QACLC,IAAI,EAAE,GAAGO,IAAI,CAACpF,SAAS,GAAG;QAC1ByB,KAAK,EAAE,GAAG2D,IAAI,CAACnF,OAAO,GAAGmF,IAAI,CAACpF,SAAS,GAAG;QAC1C8E,MAAM,EAAE,GAAGM,IAAI,CAACrF,MAAM,GAAG;QACzBA,MAAM,EAAE;MACV;IAAE,GAPGqB,CAAC;MAAA2D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAQP,CAAC,gBAEF7F,OAAA;MAEEqF,SAAS,EAAC,OAAO;MACjBE,KAAK,EAAE;QACLC,IAAI,EAAE,GAAGO,IAAI,CAACpF,SAAS,GAAG;QAC1ByB,KAAK,EAAE,GAAG2D,IAAI,CAACnF,OAAO,GAAGmF,IAAI,CAACpF,SAAS,GAAG;QAC1C8E,MAAM,EAAE,GAAGM,IAAI,CAACrF,MAAM,GAAG;QACzBA,MAAM,EAAE;MACV;IAAE,GAPGqB,CAAC;MAAA2D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAQP,CAEJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACpD,EAAA,CA3LQF,UAAU;AAAAyD,EAAA,GAAVzD,UAAU;AA6LnB,eAAeA,UAAU;AAAC,IAAAyD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}