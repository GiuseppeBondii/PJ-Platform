{"ast":null,"code":"var _jsxFileName = \"/Users/giuseppebondi/Documents/GitHub/platform/src/components/EmuSchermo.js\",\n  _s = $RefreshSig$();\n// EmuSchermo.jsx\nimport React, { useEffect, useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmuSchermo = ({\n  inputQueue\n}) => {\n  _s();\n  const screenRef = useRef(null);\n  const [position, setPosition] = useState({\n    x: 50,\n    y: 50\n  });\n  const [velocity, setVelocity] = useState({\n    dx: 0,\n    dy: 0\n  });\n  const [isGrounded, setIsGrounded] = useState(false);\n  const [screenSize, setScreenSize] = useState({\n    width: 0,\n    height: 0\n  });\n\n  // Costanti fisiche\n  const GRAVITY = 0.5;\n  const JUMP_FORCE = -12;\n  const MOVE_SPEED = 5;\n  const BALL_SIZE = 30;\n  useEffect(() => {\n    // Aggiorna dimensione schermo\n    const updateSize = () => {\n      if (screenRef.current) {\n        setScreenSize({\n          width: screenRef.current.offsetWidth,\n          height: screenRef.current.offsetHeight\n        });\n      }\n    };\n    updateSize();\n    window.addEventListener('resize', updateSize);\n    return () => window.removeEventListener('resize', updateSize);\n  }, []);\n  useEffect(() => {\n    const handleInput = () => {\n      setVelocity(prev => {\n        let newDx = prev.dx;\n        let newDy = prev.dy;\n\n        // Movimento orizzontale\n        if (inputQueue.includes('LEFT')) newDx = -MOVE_SPEED;else if (inputQueue.includes('RIGHT')) newDx = MOVE_SPEED;else newDx = 0;\n\n        // Salto\n        if (inputQueue.includes('UP') && isGrounded) {\n          newDy = JUMP_FORCE;\n          setIsGrounded(false);\n        }\n        return {\n          dx: newDx,\n          dy: newDy + (!isGrounded ? GRAVITY : 0)\n        };\n      });\n    };\n    handleInput();\n  }, [inputQueue, isGrounded]);\n  useEffect(() => {\n    const gameLoop = () => {\n      setPosition(prev => {\n        let newX = prev.x + velocity.dx;\n        let newY = prev.y + velocity.dy;\n\n        // Collisioni con i bordi\n        if (newX < 0) newX = 0;\n        if (newX > screenSize.width - BALL_SIZE) newX = screenSize.width - BALL_SIZE;\n\n        // Collisione con il terreno\n        if (newY > screenSize.height - BALL_SIZE) {\n          newY = screenSize.height - BALL_SIZE;\n          setIsGrounded(true);\n          setVelocity(v => ({\n            ...v,\n            dy: 0\n          }));\n        } else {\n          setIsGrounded(false);\n        }\n        return {\n          x: newX,\n          y: newY\n        };\n      });\n      animationId.current = requestAnimationFrame(gameLoop);\n    };\n    const animationId = {\n      current: null\n    };\n    animationId.current = requestAnimationFrame(gameLoop);\n    return () => cancelAnimationFrame(animationId.current);\n  }, [velocity, screenSize]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"windowEmu\",\n    ref: screenRef,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ball\",\n      style: {\n        left: position.x,\n        top: position.y,\n        width: BALL_SIZE,\n        height: BALL_SIZE,\n        borderRadius: '50%',\n        backgroundColor: 'red',\n        position: 'absolute',\n        transition: 'left 0.1s linear, top 0.1s ease-out'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n_s(EmuSchermo, \"766E+PmlBx57+AejJ7WSZYd8oTE=\");\n_c = EmuSchermo;\nEmuSchermo.propTypes = {\n  inputQueue: PropTypes.arrayOf(PropTypes.string).isRequired\n};\nexport default EmuSchermo;\nvar _c;\n$RefreshReg$(_c, \"EmuSchermo\");","map":{"version":3,"names":["React","useEffect","useState","useRef","PropTypes","jsxDEV","_jsxDEV","EmuSchermo","inputQueue","_s","screenRef","position","setPosition","x","y","velocity","setVelocity","dx","dy","isGrounded","setIsGrounded","screenSize","setScreenSize","width","height","GRAVITY","JUMP_FORCE","MOVE_SPEED","BALL_SIZE","updateSize","current","offsetWidth","offsetHeight","window","addEventListener","removeEventListener","handleInput","prev","newDx","newDy","includes","gameLoop","newX","newY","v","animationId","requestAnimationFrame","cancelAnimationFrame","className","ref","children","style","left","top","borderRadius","backgroundColor","transition","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","arrayOf","string","isRequired","$RefreshReg$"],"sources":["/Users/giuseppebondi/Documents/GitHub/platform/src/components/EmuSchermo.js"],"sourcesContent":["// EmuSchermo.jsx\nimport React, { useEffect, useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nconst EmuSchermo = ({ inputQueue }) => {\n  const screenRef = useRef(null);\n  const [position, setPosition] = useState({ x: 50, y: 50 });\n  const [velocity, setVelocity] = useState({ dx: 0, dy: 0 });\n  const [isGrounded, setIsGrounded] = useState(false);\n  const [screenSize, setScreenSize] = useState({ width: 0, height: 0 });\n  \n  // Costanti fisiche\n  const GRAVITY = 0.5;\n  const JUMP_FORCE = -12;\n  const MOVE_SPEED = 5;\n  const BALL_SIZE = 30;\n\n  useEffect(() => {\n    // Aggiorna dimensione schermo\n    const updateSize = () => {\n      if(screenRef.current) {\n        setScreenSize({\n          width: screenRef.current.offsetWidth,\n          height: screenRef.current.offsetHeight\n        });\n      }\n    };\n    \n    updateSize();\n    window.addEventListener('resize', updateSize);\n    return () => window.removeEventListener('resize', updateSize);\n  }, []);\n\n  useEffect(() => {\n    const handleInput = () => {\n      setVelocity(prev => {\n        let newDx = prev.dx;\n        let newDy = prev.dy;\n        \n        // Movimento orizzontale\n        if(inputQueue.includes('LEFT')) newDx = -MOVE_SPEED;\n        else if(inputQueue.includes('RIGHT')) newDx = MOVE_SPEED;\n        else newDx = 0;\n\n        // Salto\n        if(inputQueue.includes('UP') && isGrounded) {\n          newDy = JUMP_FORCE;\n          setIsGrounded(false);\n        }\n\n        return { dx: newDx, dy: newDy + (!isGrounded ? GRAVITY : 0) };\n      });\n    };\n\n    handleInput();\n  }, [inputQueue, isGrounded]);\n\n  useEffect(() => {\n    const gameLoop = () => {\n      setPosition(prev => {\n        let newX = prev.x + velocity.dx;\n        let newY = prev.y + velocity.dy;\n\n        // Collisioni con i bordi\n        if(newX < 0) newX = 0;\n        if(newX > screenSize.width - BALL_SIZE) newX = screenSize.width - BALL_SIZE;\n        \n        // Collisione con il terreno\n        if(newY > screenSize.height - BALL_SIZE) {\n          newY = screenSize.height - BALL_SIZE;\n          setIsGrounded(true);\n          setVelocity(v => ({ ...v, dy: 0 }));\n        } else {\n          setIsGrounded(false);\n        }\n\n        return { x: newX, y: newY };\n      });\n\n      animationId.current = requestAnimationFrame(gameLoop);\n    };\n\n    const animationId = { current: null };\n    animationId.current = requestAnimationFrame(gameLoop);\n    \n    return () => cancelAnimationFrame(animationId.current);\n  }, [velocity, screenSize]);\n\n  return (\n    <div className=\"windowEmu\" ref={screenRef}>\n      <div \n        className=\"ball\" \n        style={{\n          left: position.x,\n          top: position.y,\n          width: BALL_SIZE,\n          height: BALL_SIZE,\n          borderRadius: '50%',\n          backgroundColor: 'red',\n          position: 'absolute',\n          transition: 'left 0.1s linear, top 0.1s ease-out'\n        }}\n      />\n    </div>\n  );\n};\n\nEmuSchermo.propTypes = {\n  inputQueue: PropTypes.arrayOf(PropTypes.string).isRequired\n};\n\nexport default EmuSchermo;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}