{"ast":null,"code":"var _jsxFileName = \"/Users/giuseppebondi/Documents/GitHub/platform/src/components/EmuSchermo.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./EmuSchermo.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BUTTONS = {\n  A: 1,\n  B: 2,\n  START: 3,\n  SELECT: 4,\n  LEFT: 7,\n  RIGHT: 8\n};\nfunction createSeededRandom(seed) {\n  const a = 1664525;\n  const c = 1013904223;\n  const m = 2 ** 32;\n  let state = seed;\n  return function () {\n    state = (a * state + c) % m;\n    return state / m;\n  };\n}\nfunction generateLevel(seed) {\n  const rand = createSeededRandom(seed);\n  const platforms = [];\n  let currentHeight = 20;\n  const maxX = 100;\n  const platformConfig = {\n    typeChance: {\n      p: 0.7 - seed / 100,\n      s: 0.2 + seed / 100\n    },\n    heightRange: [5, 15],\n    widthRange: [5, 40],\n    spacing: [5, 70]\n  };\n\n  // Scegli un indice casuale per la piattaforma T\n  const tIndex = Math.floor(rand() * 20);\n  for (let i = 0; i < 20; i++) {\n    // Determina il tipo\n    let type;\n    if (i === tIndex) {\n      type = \"T\"; // Piattaforma speciale\n    } else {\n      // Assegna normali piattaforme con probabilitÃ  ridotte\n      const typeRand = rand();\n      type = typeRand < platformConfig.typeChance.s ? 's' : 'p';\n    }\n\n    // Altezza\n    if (i > 0) {\n      const heightIncrement = Math.floor(rand() * (platformConfig.heightRange[1] - platformConfig.heightRange[0] + 1)) + platformConfig.heightRange[0];\n      currentHeight += heightIncrement;\n    }\n\n    // Larghezza e posizione\n    const width = Math.floor(rand() * (platformConfig.widthRange[1] - platformConfig.widthRange[0] + 1)) + platformConfig.widthRange[0];\n    const posStartX = Math.floor(rand() * (maxX - width));\n    const posEndX = posStartX + width;\n    platforms.push({\n      type: type,\n      height: currentHeight,\n      posStartX: posStartX,\n      posEndX: posEndX\n    });\n  }\n  return platforms;\n}\nfunction EmuSchermo({\n  pressedButtons\n}) {\n  _s();\n  const ballSize = 4;\n  const horizontalAcceleration = 0.1;\n  const maxHorizontalSpeed = 1;\n  const friction = 0.2;\n  const jumpVelocity = 6;\n  const gravity = -0.5;\n  const [level, setLevel] = useState(1);\n  const [LEVEL, SETLEVEL] = useState(generateLevel(1));\n  const platformsRef = useRef(LEVEL);\n  useEffect(() => {\n    platformsRef.current = LEVEL;\n  }, [LEVEL]);\n  const [ball, setBall] = useState({\n    x: 2,\n    y: 0,\n    vx: 0,\n    vy: 0\n  });\n  const pressedButtonsRef = useRef(pressedButtons);\n  useEffect(() => {\n    pressedButtonsRef.current = pressedButtons;\n  }, [pressedButtons]);\n  const animationFrameId = useRef(null);\n  useEffect(() => {\n    const update = () => {\n      setBall(prev => {\n        let {\n          x,\n          y,\n          vx,\n          vy\n        } = prev;\n        const currentPressedButtons = pressedButtonsRef.current || {};\n\n        // Gestione input orizzontale\n        if (currentPressedButtons[BUTTONS.LEFT]) vx -= horizontalAcceleration;\n        if (currentPressedButtons[BUTTONS.RIGHT]) vx += horizontalAcceleration;\n        if (!currentPressedButtons[BUTTONS.LEFT] && !currentPressedButtons[BUTTONS.RIGHT]) {\n          vx = vx > 0 ? Math.max(vx - friction, 0) : Math.min(vx + friction, 0);\n        }\n        vx = Math.min(Math.max(vx, -maxHorizontalSpeed), maxHorizontalSpeed);\n\n        // Salto solo se a terra o su piattaforma\n        const isOnGroundOrPlatform = prev.y === 0 || platformsRef.current.some(p => {\n          const platformTop = p.height + 2;\n          const horizontalOverlap = prev.x <= p.posEndX && prev.x + ballSize >= p.posStartX;\n          return prev.y === platformTop && horizontalOverlap;\n        });\n        if (currentPressedButtons[BUTTONS.A] && isOnGroundOrPlatform) {\n          vy = jumpVelocity;\n        }\n        vy += gravity;\n        let newY = y + vy;\n        let newX = x + vx;\n\n        // Collisioni con piattaforme\n        let collided = false;\n        platformsRef.current.forEach(platform => {\n          const platformTop = platform.height + 2; // Top della piattaforma (2% di spessore)\n          const platformBottom = platform.height; // Base della piattaforma\n\n          // 1. Controllo overlap orizzontale\n          const horizontalOverlap = newX < platform.posEndX && newX + ballSize > platform.posStartX;\n\n          // 2. Controllo overlap verticale\n          const verticalOverlap = newY <= platformTop && newY + ballSize >= platformBottom;\n\n          // 3. Determinazione direzione collisione\n          if (horizontalOverlap && verticalOverlap) {\n            const prevBottom = prev.y + ballSize;\n            if (prevBottom <= platformBottom && vy > 0) {\n              // Collisione dal basso (salto contro piattaforma)\n              newY = platformBottom - ballSize;\n              vy = 0;\n            } else if (vy <= 0) {\n              // Collisione dall'alto (atterraggio su piattaforma)\n              newY = platformTop;\n              vy = 0;\n            }\n            collided = true;\n          }\n        });\n\n        // Collisione con il terreno solo se non abbiamo colliso con piattaforme\n        if (!collided && newY < 0) {\n          newY = 0;\n          vy = 0;\n        }\n\n        // Clamping orizzontale\n        newX = Math.max(0, Math.min(newX, 100 - ballSize));\n        platformsRef.current.forEach(platform => {\n          if (platform.type === \"s\") {\n            const spikeLeft = platform.posStartX;\n            const spikeRight = platform.posEndX;\n            const spikeTop = platform.height;\n            const spikeBottom = platform.height;\n            const horizontalCollision = x + ballSize > spikeLeft && x < spikeRight;\n            const verticalCollision = y < spikeTop && y + ballSize + 1 > spikeBottom && vy <= 0;\n            if (horizontalCollision && verticalCollision) {\n              newX = 2;\n              newY = 0;\n              vx = 0;\n              vy = 0;\n              SETLEVEL(generateLevel(level));\n            }\n          }\n          if (platform.type === \"T\") {\n            const spikeLeft = platform.posStartX;\n            const spikeRight = platform.posEndX;\n            const spikeTop = platform.height + 3;\n            const spikeBottom = platform.height;\n            const horizontalCollision = x + ballSize > spikeLeft && x < spikeRight;\n            const verticalCollision = y < spikeTop && y + ballSize > spikeBottom && vy <= 0;\n            if (horizontalCollision && verticalCollision) {\n              const newLevel = level + 1;\n              setLevel(newLevel);\n              SETLEVEL(generateLevel(newLevel)); // Aggiorna lo stato correttamente\n              newX = 2;\n              newY = 0;\n              vx = 0;\n              vy = 0;\n            }\n          }\n        });\n        return {\n          x: newX,\n          y: newY,\n          vx,\n          vy\n        };\n      });\n      animationFrameId.current = requestAnimationFrame(update);\n    };\n    animationFrameId.current = requestAnimationFrame(update);\n    return () => cancelAnimationFrame(animationFrameId.current);\n  }, [level, ballSize, horizontalAcceleration, friction, maxHorizontalSpeed, jumpVelocity, gravity]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"emu-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ball\",\n      style: {\n        left: `${ball.x}%`,\n        bottom: `${ball.y}%`,\n        width: `${ballSize}%`,\n        height: `${ballSize + 2}%`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this), LEVEL.map((item, i) => {\n      if (item.type === \"T\") {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"t-platform\",\n          style: {\n            left: `${item.posStartX}%`,\n            width: `${item.posEndX - item.posStartX}%`,\n            bottom: `${item.height}%`,\n            height: \"2%\"\n          }\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 13\n        }, this);\n      } else if (item.type === \"p\") {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"platform\",\n          style: {\n            left: `${item.posStartX}%`,\n            width: `${item.posEndX - item.posStartX}%`,\n            bottom: `${item.height}%`,\n            height: \"2%\"\n          }\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 13\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spike\",\n          style: {\n            left: `${item.posStartX}%`,\n            width: `${item.posEndX - item.posStartX}%`,\n            bottom: `${item.height}%`,\n            height: \"2%\"\n          }\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 13\n        }, this);\n      }\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 252,\n    columnNumber: 5\n  }, this);\n}\n_s(EmuSchermo, \"W9HxADwyY9lDZR10Sc6DM7DCH8k=\");\n_c = EmuSchermo;\nexport default EmuSchermo;\nvar _c;\n$RefreshReg$(_c, \"EmuSchermo\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","BUTTONS","A","B","START","SELECT","LEFT","RIGHT","createSeededRandom","seed","a","c","m","state","generateLevel","rand","platforms","currentHeight","maxX","platformConfig","typeChance","p","s","heightRange","widthRange","spacing","tIndex","Math","floor","i","type","typeRand","heightIncrement","width","posStartX","posEndX","push","height","EmuSchermo","pressedButtons","_s","ballSize","horizontalAcceleration","maxHorizontalSpeed","friction","jumpVelocity","gravity","level","setLevel","LEVEL","SETLEVEL","platformsRef","current","ball","setBall","x","y","vx","vy","pressedButtonsRef","animationFrameId","update","prev","currentPressedButtons","max","min","isOnGroundOrPlatform","some","platformTop","horizontalOverlap","newY","newX","collided","forEach","platform","platformBottom","verticalOverlap","prevBottom","spikeLeft","spikeRight","spikeTop","spikeBottom","horizontalCollision","verticalCollision","newLevel","requestAnimationFrame","cancelAnimationFrame","className","children","style","left","bottom","fileName","_jsxFileName","lineNumber","columnNumber","map","item","_c","$RefreshReg$"],"sources":["/Users/giuseppebondi/Documents/GitHub/platform/src/components/EmuSchermo.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport \"./EmuSchermo.css\";\n\nconst BUTTONS = {\n  A: 1,\n  B: 2,\n  START: 3,\n  SELECT: 4,\n  LEFT: 7,\n  RIGHT: 8,\n};       \n\nfunction createSeededRandom(seed) {\n  const a = 1664525;\n  const c = 1013904223;\n  const m = 2**32;\n  let state = seed;\n  \n  return function() {\n    state = (a * state + c) % m;\n    return state / m;\n  };\n}\n\nfunction generateLevel(seed) {\n  const rand = createSeededRandom(seed);\n  const platforms = [];\n  let currentHeight = 20;\n  const maxX = 100;\n\n  const platformConfig = {\n    typeChance: { p: 0.7 - seed / 100, s: 0.2 + seed / 100 },     \n    heightRange: [5, 15],               \n    widthRange: [5, 40],             \n    spacing: [5, 70] \n  };\n\n  // Scegli un indice casuale per la piattaforma T\n  const tIndex = Math.floor(rand() * 20);\n\n  for (let i = 0; i < 20; i++) {\n    // Determina il tipo\n    let type;\n    if (i === tIndex) {\n      type = \"T\"; // Piattaforma speciale\n    } else {\n      // Assegna normali piattaforme con probabilitÃ  ridotte\n      const typeRand = rand();\n      type = typeRand < platformConfig.typeChance.s ? 's' : 'p';\n    }\n\n    // Altezza\n    if (i > 0) {\n      const heightIncrement = Math.floor(\n        rand() * (platformConfig.heightRange[1] - platformConfig.heightRange[0] + 1)\n      ) + platformConfig.heightRange[0];\n      currentHeight += heightIncrement;\n    }\n\n    // Larghezza e posizione\n    const width = Math.floor(\n      rand() * (platformConfig.widthRange[1] - platformConfig.widthRange[0] + 1)\n    ) + platformConfig.widthRange[0];\n\n    const posStartX = Math.floor(rand() * (maxX - width));\n    const posEndX = posStartX + width;\n\n    platforms.push({\n      type: type,\n      height: currentHeight,\n      posStartX: posStartX,\n      posEndX: posEndX\n    });\n  }\n\n  return platforms;\n}\n\nfunction EmuSchermo({ pressedButtons }) {\n  const ballSize = 4;\n  const horizontalAcceleration = 0.1;\n  const maxHorizontalSpeed = 1;\n  const friction = 0.2;\n  const jumpVelocity = 6;\n  const gravity = -0.5;\n  const [level, setLevel] = useState(1);\n  const [LEVEL, SETLEVEL] = useState(generateLevel(1));\n  const platformsRef = useRef(LEVEL);\n\n  useEffect(() => {\n    platformsRef.current = LEVEL;\n  }, [LEVEL]);\n\n  const [ball, setBall] = useState({\n    x: 2,\n    y: 0,\n    vx: 0,\n    vy: 0,\n  });\n\n  const pressedButtonsRef = useRef(pressedButtons);\n  useEffect(() => {\n    pressedButtonsRef.current = pressedButtons;\n  }, [pressedButtons]);\n\n  const animationFrameId = useRef(null);\n\n  useEffect(() => {\n    const update = () => {\n      setBall((prev) => {\n        let { x, y, vx, vy } = prev;\n        const currentPressedButtons = pressedButtonsRef.current || {};\n\n        // Gestione input orizzontale\n        if (currentPressedButtons[BUTTONS.LEFT]) vx -= horizontalAcceleration;\n        if (currentPressedButtons[BUTTONS.RIGHT]) vx += horizontalAcceleration;\n\n        if (!currentPressedButtons[BUTTONS.LEFT] && !currentPressedButtons[BUTTONS.RIGHT]) {\n          vx = vx > 0 ? Math.max(vx - friction, 0) : Math.min(vx + friction, 0);\n        }\n\n        vx = Math.min(Math.max(vx, -maxHorizontalSpeed), maxHorizontalSpeed);\n\n        // Salto solo se a terra o su piattaforma\n        const isOnGroundOrPlatform =\n          prev.y === 0 ||\n          platformsRef.current.some(p => {\n            const platformTop = p.height + 2;\n            const horizontalOverlap = (\n              prev.x <= p.posEndX &&\n              (prev.x + ballSize) >= p.posStartX\n            );\n            return prev.y === platformTop && horizontalOverlap;\n          });\n\n        if (currentPressedButtons[BUTTONS.A] && isOnGroundOrPlatform) {\n          vy = jumpVelocity;\n        }\n\n        vy += gravity;\n        let newY = y + vy;\n        let newX = x + vx;\n\n        // Collisioni con piattaforme\n        let collided = false;\n\n        platformsRef.current.forEach(platform => {\n          const platformTop = platform.height + 2; // Top della piattaforma (2% di spessore)\n          const platformBottom = platform.height;   // Base della piattaforma\n\n          // 1. Controllo overlap orizzontale\n          const horizontalOverlap = (\n            newX < platform.posEndX &&\n            (newX + ballSize) > platform.posStartX\n          );\n\n          // 2. Controllo overlap verticale\n          const verticalOverlap = (\n            newY <= platformTop &&\n            (newY + ballSize) >= platformBottom\n          );\n\n          // 3. Determinazione direzione collisione\n          if (horizontalOverlap && verticalOverlap) {\n            const prevBottom = prev.y + ballSize;\n            if (prevBottom <= platformBottom && vy > 0) {\n              // Collisione dal basso (salto contro piattaforma)\n              newY = platformBottom - ballSize;\n              vy = 0;\n            } else if (vy <= 0) {\n              // Collisione dall'alto (atterraggio su piattaforma)\n              newY = platformTop;\n              vy = 0;\n            }\n            collided = true;\n          }\n        });\n\n        // Collisione con il terreno solo se non abbiamo colliso con piattaforme\n        if (!collided && newY < 0) {\n          newY = 0;\n          vy = 0;\n        }\n\n        // Clamping orizzontale\n        newX = Math.max(0, Math.min(newX, 100 - ballSize));\n\n        platformsRef.current.forEach(platform => {\n          if (platform.type === \"s\") {\n            const spikeLeft = platform.posStartX;\n            const spikeRight = platform.posEndX;\n            const spikeTop = platform.height;\n            const spikeBottom = platform.height;\n\n            const horizontalCollision = (\n              x + ballSize > spikeLeft &&\n              x < spikeRight\n            );\n\n            const verticalCollision = (\n              y < spikeTop &&\n              y + ballSize +1  > spikeBottom &&\n              vy <= 0\n            );\n\n            if (horizontalCollision && verticalCollision) {\n              newX = 2;\n              newY = 0;\n              vx = 0;\n              vy = 0;\n              SETLEVEL(generateLevel(level));\n            }\n          }\n          if (platform.type === \"T\") {\n            const spikeLeft = platform.posStartX;\n            const spikeRight = platform.posEndX;\n            const spikeTop = platform.height + 3;\n            const spikeBottom = platform.height;\n\n            const horizontalCollision = (\n              x + ballSize > spikeLeft &&\n              x < spikeRight\n            );\n\n            const verticalCollision = (\n              y < spikeTop &&\n              y + ballSize > spikeBottom &&\n              vy <= 0\n            );\n\n            if (horizontalCollision && verticalCollision) {\n              const newLevel = level + 1;\n              setLevel(newLevel);\n              SETLEVEL(generateLevel(newLevel)); // Aggiorna lo stato correttamente\n              newX = 2;\n              newY = 0;\n              vx = 0;\n              vy = 0;\n            }\n          }\n        });\n        return { x: newX, y: newY, vx, vy };\n      });\n      animationFrameId.current = requestAnimationFrame(update);\n    };\n\n    animationFrameId.current = requestAnimationFrame(update);\n    return () => cancelAnimationFrame(animationFrameId.current);\n  }, [level, ballSize, horizontalAcceleration, friction, maxHorizontalSpeed, jumpVelocity, gravity]);\n\n  return (\n    <div className=\"emu-container\">\n      <div\n        className=\"ball\"\n        style={{\n          left: `${ball.x}%`,\n          bottom: `${ball.y}%`,\n          width: `${ballSize}%`,\n          height: `${ballSize + 2}%`,\n        }}\n      ></div>\n\n      {LEVEL.map((item, i) => {\n        if (item.type === \"T\") {\n          return (\n            <div\n              key={i}\n              className=\"t-platform\"\n              style={{\n                left: `${item.posStartX}%`,\n                width: `${item.posEndX - item.posStartX}%`,\n                bottom: `${item.height}%`,\n                height: \"2%\",\n              }}\n            />\n          );\n        } else if (item.type === \"p\") {\n          return (\n            <div\n              key={i}\n              className=\"platform\"\n              style={{\n                left: `${item.posStartX}%`,\n                width: `${item.posEndX - item.posStartX}%`,\n                bottom: `${item.height}%`,\n                height: \"2%\",\n              }}\n            />\n          );\n        } else {\n          return (\n            <div\n              key={i}\n              className=\"spike\"\n              style={{\n                left: `${item.posStartX}%`,\n                width: `${item.posEndX - item.posStartX}%`,\n                bottom: `${item.height}%`,\n                height: \"2%\",\n              }}\n            />\n          );\n        }\n      })}\n    </div>\n  );\n}\n\nexport default EmuSchermo;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}