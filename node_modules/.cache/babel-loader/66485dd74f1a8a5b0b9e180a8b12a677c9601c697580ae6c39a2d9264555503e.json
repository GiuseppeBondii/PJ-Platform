{"ast":null,"code":"var _jsxFileName = \"/Users/giuseppebondi/Documents/GitHub/platform/src/components/EmuSchermo.js\",\n  _s = $RefreshSig$();\n// EmuSchermo.jsx\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmuSchermo = ({\n  inputQueue\n}) => {\n  _s();\n  const [Last, setLast] = useState([]);\n  useEffect(() => {\n    const processInputs = async () => {\n      if (inputQueue.length > 0) {\n        // Simula il processing degli input\n        const lastInput = inputQueue[inputQueue.length - 1];\n        console.log('Elaboro input:', lastInput);\n        setLast(lastInput);\n      }\n    };\n    processInputs();\n  }, [inputQueue]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"windowEmu\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"screen-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-overlay\",\n        children: Last\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(EmuSchermo, \"L3GFPumUSJLvNopi6VREi45VaY4=\");\n_c = EmuSchermo;\nEmuSchermo.propTypes = {\n  inputQueue: PropTypes.arrayOf(PropTypes.string).isRequired\n};\nexport default EmuSchermo;\nvar _c;\n$RefreshReg$(_c, \"EmuSchermo\");","map":{"version":3,"names":["React","useEffect","useState","PropTypes","jsxDEV","_jsxDEV","EmuSchermo","inputQueue","_s","Last","setLast","processInputs","length","lastInput","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","arrayOf","string","isRequired","$RefreshReg$"],"sources":["/Users/giuseppebondi/Documents/GitHub/platform/src/components/EmuSchermo.js"],"sourcesContent":["// EmuSchermo.jsx\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst EmuSchermo = ({ inputQueue }) => {\n\n    const [Last, setLast] = useState([])\n\n\n\n  useEffect(() => {\n    const processInputs = async () => {\n      if (inputQueue.length > 0) {\n        // Simula il processing degli input\n        const lastInput = inputQueue[inputQueue.length - 1];\n        console.log('Elaboro input:', lastInput);\n        \n        setLast(lastInput);\n      }\n    };\n\n    processInputs();\n  }, [inputQueue]);\n\n  return (\n    <div className=\"windowEmu\">\n      {/* Schermo dell'emulatore */}\n      <div className=\"screen-content\">\n        <div className=\"input-overlay\">\n          {Last}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nEmuSchermo.propTypes = {\n  inputQueue: PropTypes.arrayOf(PropTypes.string).isRequired\n};\n\nexport default EmuSchermo;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EAEnC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAItCD,SAAS,CAAC,MAAM;IACd,MAAMU,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAIJ,UAAU,CAACK,MAAM,GAAG,CAAC,EAAE;QACzB;QACA,MAAMC,SAAS,GAAGN,UAAU,CAACA,UAAU,CAACK,MAAM,GAAG,CAAC,CAAC;QACnDE,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEF,SAAS,CAAC;QAExCH,OAAO,CAACG,SAAS,CAAC;MACpB;IACF,CAAC;IAEDF,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,CAACJ,UAAU,CAAC,CAAC;EAEhB,oBACEF,OAAA;IAAKW,SAAS,EAAC,WAAW;IAAAC,QAAA,eAExBZ,OAAA;MAAKW,SAAS,EAAC,gBAAgB;MAAAC,QAAA,eAC7BZ,OAAA;QAAKW,SAAS,EAAC,eAAe;QAAAC,QAAA,EAC3BR;MAAI;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACb,EAAA,CA9BIF,UAAU;AAAAgB,EAAA,GAAVhB,UAAU;AAgChBA,UAAU,CAACiB,SAAS,GAAG;EACrBhB,UAAU,EAAEJ,SAAS,CAACqB,OAAO,CAACrB,SAAS,CAACsB,MAAM,CAAC,CAACC;AAClD,CAAC;AAED,eAAepB,UAAU;AAAC,IAAAgB,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}