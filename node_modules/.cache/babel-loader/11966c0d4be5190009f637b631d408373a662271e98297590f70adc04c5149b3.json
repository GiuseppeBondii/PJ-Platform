{"ast":null,"code":"var _jsxFileName = \"/Users/giuseppebondi/Documents/GitHub/platform/src/components/EmuSchermo.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./EmuSchermo.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BUTTONS = {\n  A: 1,\n  B: 2,\n  START: 3,\n  SELECT: 4,\n  UP: 5,\n  DOWN: 6,\n  LEFT: 7,\n  RIGHT: 8\n};\nfunction EmuSchermo({\n  button\n}) {\n  _s();\n  // Costanti di fisica in percentuali\n  const ballSize = 5; // dimensione della pallina (in % del container)\n  const horizontalSpeed = 2; // velocità orizzontale fissa (% per frame)\n  const jumpVelocity = 10; // velocità iniziale del salto (% per frame)\n  const gravity = -0.5; // gravità (% per frame)\n  const buttonDownThreshold = 100; // soglia in ms per simulare il \"button-down\" continuo\n\n  // Stato della pallina: x e y (in %) e velocità orizzontale (vx) e verticale (vy)\n  const [ball, setBall] = useState({\n    x: 50 - ballSize / 2,\n    // centrata orizzontalmente\n    y: 0,\n    // sul \"terreno\"\n    vx: 0,\n    vy: 0\n  });\n\n  // Utilizziamo un ref per simulare l'input continuo\n  const activeButtonRef = useRef(null);\n  const lastButtonTimeRef = useRef(0);\n\n  // Aggiorna il ref ogni volta che viene ricevuto un nuovo input\n  useEffect(() => {\n    if (button !== null && button !== undefined) {\n      activeButtonRef.current = button;\n      lastButtonTimeRef.current = Date.now();\n    }\n  }, [button]);\n\n  // Ciclo di animazione con requestAnimationFrame\n  const animationFrameId = useRef(null);\n  useEffect(() => {\n    const update = () => {\n      const now = Date.now();\n      // Se l'ultimo input è stato ricevuto da meno di buttonDownThreshold ms,\n      // consideriamo il pulsante attivo; altrimenti lo simuliamo come \"rilasciato\"\n      const simulatedButton = now - lastButtonTimeRef.current <= buttonDownThreshold ? activeButtonRef.current : null;\n      setBall(prev => {\n        let {\n          x,\n          y,\n          vx,\n          vy\n        } = prev;\n\n        // Se viene \"tenuto premuto\" LEFT o RIGHT, imposta la velocità orizzontale fissa,\n        // altrimenti la pallina non si muove orizzontalmente\n        if (simulatedButton === BUTTONS.LEFT) {\n          vx = -horizontalSpeed;\n        } else if (simulatedButton === BUTTONS.RIGHT) {\n          vx = horizontalSpeed;\n        } else {\n          vx = 0;\n        }\n\n        // Se viene premuto UP e la pallina è a terra, inizia il salto\n        if (simulatedButton === BUTTONS.UP && y === 0) {\n          vy = jumpVelocity;\n        }\n\n        // Applica la gravità alla velocità verticale\n        vy += gravity;\n\n        // Aggiorna le posizioni\n        x += vx;\n        y += vy;\n\n        // Clamping orizzontale (il container va da 0% a 100%)\n        if (x < 0) x = 0;\n        if (x > 100 - ballSize) x = 100 - ballSize;\n\n        // Gestione del \"terreno\": la pallina non può scendere sotto y=0\n        if (y < 0) {\n          y = 0;\n          vy = 0;\n        }\n        return {\n          x,\n          y,\n          vx,\n          vy\n        };\n      });\n      animationFrameId.current = requestAnimationFrame(update);\n    };\n    animationFrameId.current = requestAnimationFrame(update);\n    return () => cancelAnimationFrame(animationFrameId.current);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"emu-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ball\",\n      style: {\n        left: `${ball.x}%`,\n        bottom: `${ball.y}%`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n_s(EmuSchermo, \"Hthw0cNnNg6pNF9Ex7ZcolTK6WY=\");\n_c = EmuSchermo;\nexport default EmuSchermo;\nvar _c;\n$RefreshReg$(_c, \"EmuSchermo\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","BUTTONS","A","B","START","SELECT","UP","DOWN","LEFT","RIGHT","EmuSchermo","button","_s","ballSize","horizontalSpeed","jumpVelocity","gravity","buttonDownThreshold","ball","setBall","x","y","vx","vy","activeButtonRef","lastButtonTimeRef","undefined","current","Date","now","animationFrameId","update","simulatedButton","prev","requestAnimationFrame","cancelAnimationFrame","className","children","style","left","bottom","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/giuseppebondi/Documents/GitHub/platform/src/components/EmuSchermo.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport \"./EmuSchermo.css\";\n\nconst BUTTONS = {\n  A: 1,\n  B: 2,\n  START: 3,\n  SELECT: 4,\n  UP: 5,\n  DOWN: 6,\n  LEFT: 7,\n  RIGHT: 8,\n};\n\nfunction EmuSchermo({ button }) {\n  // Costanti di fisica in percentuali\n  const ballSize = 5;              // dimensione della pallina (in % del container)\n  const horizontalSpeed = 2;       // velocità orizzontale fissa (% per frame)\n  const jumpVelocity = 10;         // velocità iniziale del salto (% per frame)\n  const gravity = -0.5;            // gravità (% per frame)\n  const buttonDownThreshold = 100; // soglia in ms per simulare il \"button-down\" continuo\n\n  // Stato della pallina: x e y (in %) e velocità orizzontale (vx) e verticale (vy)\n  const [ball, setBall] = useState({\n    x: 50 - ballSize / 2, // centrata orizzontalmente\n    y: 0,                 // sul \"terreno\"\n    vx: 0,\n    vy: 0,\n  });\n\n  // Utilizziamo un ref per simulare l'input continuo\n  const activeButtonRef = useRef(null);\n  const lastButtonTimeRef = useRef(0);\n\n  // Aggiorna il ref ogni volta che viene ricevuto un nuovo input\n  useEffect(() => {\n    if (button !== null && button !== undefined) {\n      activeButtonRef.current = button;\n      lastButtonTimeRef.current = Date.now();\n    }\n  }, [button]);\n\n  // Ciclo di animazione con requestAnimationFrame\n  const animationFrameId = useRef(null);\n  useEffect(() => {\n    const update = () => {\n      const now = Date.now();\n      // Se l'ultimo input è stato ricevuto da meno di buttonDownThreshold ms,\n      // consideriamo il pulsante attivo; altrimenti lo simuliamo come \"rilasciato\"\n      const simulatedButton =\n        now - lastButtonTimeRef.current <= buttonDownThreshold\n          ? activeButtonRef.current\n          : null;\n\n      setBall(prev => {\n        let { x, y, vx, vy } = prev;\n\n        // Se viene \"tenuto premuto\" LEFT o RIGHT, imposta la velocità orizzontale fissa,\n        // altrimenti la pallina non si muove orizzontalmente\n        if (simulatedButton === BUTTONS.LEFT) {\n          vx = -horizontalSpeed;\n        } else if (simulatedButton === BUTTONS.RIGHT) {\n          vx = horizontalSpeed;\n        } else {\n          vx = 0;\n        }\n\n        // Se viene premuto UP e la pallina è a terra, inizia il salto\n        if (simulatedButton === BUTTONS.UP && y === 0) {\n          vy = jumpVelocity;\n        }\n\n        // Applica la gravità alla velocità verticale\n        vy += gravity;\n\n        // Aggiorna le posizioni\n        x += vx;\n        y += vy;\n\n        // Clamping orizzontale (il container va da 0% a 100%)\n        if (x < 0) x = 0;\n        if (x > 100 - ballSize) x = 100 - ballSize;\n\n        // Gestione del \"terreno\": la pallina non può scendere sotto y=0\n        if (y < 0) {\n          y = 0;\n          vy = 0;\n        }\n\n        return { x, y, vx, vy };\n      });\n      animationFrameId.current = requestAnimationFrame(update);\n    };\n\n    animationFrameId.current = requestAnimationFrame(update);\n    return () => cancelAnimationFrame(animationFrameId.current);\n  }, []);\n\n  return (\n    <div className=\"emu-container\">\n      <div\n        className=\"ball\"\n        style={{\n          left: `${ball.x}%`,\n          bottom: `${ball.y}%`,\n        }}\n      ></div>\n    </div>\n  );\n}\n\nexport default EmuSchermo;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}