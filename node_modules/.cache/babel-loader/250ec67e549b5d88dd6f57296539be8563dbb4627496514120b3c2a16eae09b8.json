{"ast":null,"code":"var _jsxFileName = \"/Users/giuseppebondi/Documents/GitHub/PJ-Platform/src/components/SlotTime.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport './SlotTime.css';\n\n// Constants for controller buttons\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BUTTONS = {\n  A: 1,\n  B: 2,\n  START: 3,\n  SELECT: 4,\n  LEFT: 7,\n  RIGHT: 8\n};\n\n// Game configuration settings\nconst GAME_CONFIG = {\n  ANIMATION_DURATION: 5000,\n  MULTIPLIERS: [0, 0.2, 0.5, 0.7, 0.9, 1, 1.2, 1.5, 1.7, 1.9, 2, 2.5, 2.8, 3],\n  MIN_BET: 1\n};\n\n// Secondary UI Components\nconst SlotHeader = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"slot-header\",\n  children: /*#__PURE__*/_jsxDEV(\"h2\", {\n    className: \"pixelated\",\n    children: \"Slot 2s\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 23,\n  columnNumber: 3\n}, this);\n_c = SlotHeader;\nconst BetControls = ({\n  selectedBet,\n  maxBet\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"bet-controls pixelated\",\n  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Remaining seconds: \", maxBet]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bet-selector\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"bet-label\",\n      children: \"Selected bet:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"bet-value\",\n      children: selectedBet\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 29,\n  columnNumber: 3\n}, this);\n_c2 = BetControls;\nconst Instructions = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"instructions pixelated\",\n  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Use \", /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"button-hint\",\n      children: \"\\u2190/\\u2192\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }, this), \" to change the bet\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Press \", /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"button-hint\",\n      children: \"J\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), \" to confirm\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 39,\n  columnNumber: 3\n}, this);\n_c3 = Instructions;\nconst AnimationDisplay = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"animation-display\",\n  children: /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"slot-reels\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reel\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"symbols-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"symbol red\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"symbol blue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"symbol green\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"symbol gold\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"symbol purple\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reel\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"symbols-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"symbol red\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"symbol blue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"symbol green\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"symbol gold\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"symbol purple\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reel\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"symbols-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"symbol red\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"symbol blue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"symbol green\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"symbol gold\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"symbol purple\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 50,\n  columnNumber: 3\n}, this);\n_c4 = AnimationDisplay;\nconst ResultDisplay = ({\n  result\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: `result-display ${result.multiplier > 0 ? 'win' : 'lose'} pixelated`,\n  children: [result.multiplier > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"win-title\",\n      children: \"You won!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"win-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"multiplier\",\n        children: [\"\\xD7\", result.multiplier]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"winnings\",\n        children: [result.winnings, \" seconds\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true) : /*#__PURE__*/_jsxDEV(\"h3\", {\n    className: \"lose-title\",\n    children: \"You didn't win this time\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 7\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"continue-hint\",\n    children: \"Tap to continue...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 83,\n  columnNumber: 3\n}, this);\n_c5 = ResultDisplay;\nfunction SlotTime({\n  timeSlot,\n  onSlotComplete,\n  pressedButtons\n}) {\n  _s();\n  const [selectedBet, setSelectedBet] = useState(1);\n  const [animating, setAnimating] = useState(false);\n  const [result, setResult] = useState(null);\n  const [gameState, setGameState] = useState('betting'); // 'betting', 'spinning', 'result'\n\n  // Use refs to track button state\n  const pressedButtonsRef = useRef(pressedButtons);\n  const prevPressedButtonsRef = useRef({});\n\n  // Update button refs when props change\n  useEffect(() => {\n    pressedButtonsRef.current = pressedButtons;\n  }, [pressedButtons]);\n\n  // Initialize bet to minimum or maximum available\n  useEffect(() => {\n    setSelectedBet(prev => Math.min(Math.max(GAME_CONFIG.MIN_BET, prev), timeSlot));\n  }, [timeSlot]);\n\n  // Calculate random result\n  const calculateResult = useCallback(() => {\n    const multiplier = GAME_CONFIG.MULTIPLIERS[Math.floor(Math.random() * GAME_CONFIG.MULTIPLIERS.length)];\n    return {\n      multiplier,\n      winnings: multiplier > 0 ? Math.trunc(selectedBet * multiplier) : 0\n    };\n  }, [selectedBet]);\n\n  // Handle spin animation and result calculation\n  const handleSpin = useCallback(() => {\n    if (selectedBet <= 0 || selectedBet > timeSlot) return;\n    setAnimating(true);\n    setGameState('spinning');\n\n    // Simulate slot machine spinning\n    setTimeout(() => {\n      const newResult = calculateResult();\n      setResult(newResult);\n      setAnimating(false);\n      setGameState('result');\n    }, GAME_CONFIG.ANIMATION_DURATION);\n  }, [calculateResult, selectedBet, timeSlot]);\n\n  // Handle controller button inputs\n  useEffect(() => {\n    if (gameState !== 'betting') return;\n    const currentButtons = pressedButtonsRef.current || {};\n    const prevButtons = prevPressedButtonsRef.current || {};\n\n    // Check if a button was just pressed\n    const isButtonJustPressed = buttonCode => {\n      return currentButtons[buttonCode] && !prevButtons[buttonCode];\n    };\n    if (isButtonJustPressed(BUTTONS.LEFT)) {\n      setSelectedBet(prev => Math.max(prev - 1, GAME_CONFIG.MIN_BET));\n    } else if (isButtonJustPressed(BUTTONS.RIGHT)) {\n      setSelectedBet(prev => Math.min(prev + 1, timeSlot));\n    } else if (isButtonJustPressed(BUTTONS.A)) {\n      handleSpin();\n    }\n\n    // Update previous button state reference\n    prevPressedButtonsRef.current = {\n      ...currentButtons\n    };\n  }, [pressedButtons, gameState, timeSlot, handleSpin]);\n\n  // Handle click to complete game and return to main game flow\n  const handleGameComplete = () => {\n    if (gameState === 'result') {\n      // Calculate new time based on winnings\n      const newTimeValue = result.multiplier > 0 ? result.winnings - selectedBet : 0;\n\n      // Call parent callback with the new time value\n      onSlotComplete(newTimeValue);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `slot-overlay game-state-${gameState}`,\n    onClick: handleGameComplete,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `slot-container ${animating ? 'animating' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(SlotHeader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), gameState === 'betting' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(BetControls, {\n          selectedBet: selectedBet,\n          maxBet: timeSlot\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Instructions, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), gameState === 'spinning' && /*#__PURE__*/_jsxDEV(AnimationDisplay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 38\n      }, this), gameState === 'result' && /*#__PURE__*/_jsxDEV(ResultDisplay, {\n        result: result\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 36\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 5\n  }, this);\n}\n_s(SlotTime, \"YpyQKyhLxxcXhDSFl6AhBE+Kvmc=\");\n_c6 = SlotTime;\nexport default SlotTime;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"SlotHeader\");\n$RefreshReg$(_c2, \"BetControls\");\n$RefreshReg$(_c3, \"Instructions\");\n$RefreshReg$(_c4, \"AnimationDisplay\");\n$RefreshReg$(_c5, \"ResultDisplay\");\n$RefreshReg$(_c6, \"SlotTime\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","BUTTONS","A","B","START","SELECT","LEFT","RIGHT","GAME_CONFIG","ANIMATION_DURATION","MULTIPLIERS","MIN_BET","SlotHeader","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","BetControls","selectedBet","maxBet","_c2","Instructions","_c3","AnimationDisplay","_c4","ResultDisplay","result","multiplier","winnings","_c5","SlotTime","timeSlot","onSlotComplete","pressedButtons","_s","setSelectedBet","animating","setAnimating","setResult","gameState","setGameState","pressedButtonsRef","prevPressedButtonsRef","current","prev","Math","min","max","calculateResult","floor","random","length","trunc","handleSpin","setTimeout","newResult","currentButtons","prevButtons","isButtonJustPressed","buttonCode","handleGameComplete","newTimeValue","onClick","_c6","$RefreshReg$"],"sources":["/Users/giuseppebondi/Documents/GitHub/PJ-Platform/src/components/SlotTime.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport './SlotTime.css';\n\n// Constants for controller buttons\nconst BUTTONS = {\n  A: 1,\n  B: 2,\n  START: 3,\n  SELECT: 4,\n  LEFT: 7,\n  RIGHT: 8,\n};\n\n// Game configuration settings\nconst GAME_CONFIG = {\n  ANIMATION_DURATION: 5000,\n  MULTIPLIERS: [0,0.2,0.5,0.7,0.9, 1,1.2,1.5,1.7,1.9, 2,2.5,2.8, 3],\n  MIN_BET: 1,\n};\n\n// Secondary UI Components\nconst SlotHeader = () => (\n  <div className=\"slot-header\">\n    <h2 className=\"pixelated\">Slot 2s</h2>\n  </div>\n);\n\nconst BetControls = ({ selectedBet, maxBet }) => (\n  <div className=\"bet-controls pixelated\">\n    <p>Remaining seconds: {maxBet}</p>\n    <div className=\"bet-selector\">\n      <span className=\"bet-label\">Selected bet:</span>\n      <span className=\"bet-value\">{selectedBet}</span>\n    </div>\n  </div>\n);\n\nconst Instructions = () => (\n  <div className=\"instructions pixelated\">\n    <p>\n      Use <span className=\"button-hint\">←/→</span> to change the bet\n    </p>\n    <p>\n      Press <span className=\"button-hint\">J</span> to confirm\n    </p>\n  </div>\n);\n\nconst AnimationDisplay = () => (\n  <div className=\"animation-display\">\n    <div className=\"slot-reels\">\n      <div className=\"reel\">\n        <div className=\"symbols-container\">\n          <div className=\"symbol red\"></div>\n          <div className=\"symbol blue\"></div>\n          <div className=\"symbol green\"></div>\n          <div className=\"symbol gold\"></div>\n          <div className=\"symbol purple\"></div>\n        </div>\n      </div>\n      <div className=\"reel\">\n        <div className=\"symbols-container\">\n          <div className=\"symbol red\"></div>\n          <div className=\"symbol blue\"></div>\n          <div className=\"symbol green\"></div>\n          <div className=\"symbol gold\"></div>\n          <div className=\"symbol purple\"></div>\n        </div>\n      </div>\n      <div className=\"reel\">\n        <div className=\"symbols-container\">\n          <div className=\"symbol red\"></div>\n          <div className=\"symbol blue\"></div>\n          <div className=\"symbol green\"></div>\n          <div className=\"symbol gold\"></div>\n          <div className=\"symbol purple\"></div>\n        </div>\n      </div>\n    </div>\n  </div>\n);\nconst ResultDisplay = ({ result }) => (\n  <div className={`result-display ${result.multiplier > 0 ? 'win' : 'lose'} pixelated`}>\n    {result.multiplier > 0 ? (\n      <>\n        <h3 className=\"win-title\">You won!</h3>\n        <p className=\"win-details\">\n          <span className=\"multiplier\">×{result.multiplier}</span>\n          <span className=\"winnings\">{result.winnings} seconds</span>\n        </p>\n      </>\n    ) : (\n      <h3 className=\"lose-title\">You didn't win this time</h3>\n    )}\n    <p className=\"continue-hint\">Tap to continue...</p>\n  </div>\n);\n\nfunction SlotTime({ timeSlot, onSlotComplete, pressedButtons }) {\n  const [selectedBet, setSelectedBet] = useState(1);\n  const [animating, setAnimating] = useState(false);\n  const [result, setResult] = useState(null);\n  const [gameState, setGameState] = useState('betting'); // 'betting', 'spinning', 'result'\n  \n  // Use refs to track button state\n  const pressedButtonsRef = useRef(pressedButtons);\n  const prevPressedButtonsRef = useRef({});\n  \n  // Update button refs when props change\n  useEffect(() => {\n    pressedButtonsRef.current = pressedButtons;\n  }, [pressedButtons]);\n  \n  // Initialize bet to minimum or maximum available\n  useEffect(() => {\n    setSelectedBet(prev => Math.min(Math.max(GAME_CONFIG.MIN_BET, prev), timeSlot));\n  }, [timeSlot]);\n\n  // Calculate random result\n  const calculateResult = useCallback(() => {\n    const multiplier = GAME_CONFIG.MULTIPLIERS[\n      Math.floor(Math.random() * GAME_CONFIG.MULTIPLIERS.length)\n    ];\n    \n    return {\n      multiplier,\n      winnings: multiplier > 0 ? Math.trunc(selectedBet * multiplier) : 0\n    };\n  }, [selectedBet]);\n\n  // Handle spin animation and result calculation\n  const handleSpin = useCallback(() => {\n    if (selectedBet <= 0 || selectedBet > timeSlot) return;\n    \n    setAnimating(true);\n    setGameState('spinning');\n    \n    // Simulate slot machine spinning\n    setTimeout(() => {\n      const newResult = calculateResult();\n      setResult(newResult);\n      setAnimating(false);\n      setGameState('result');\n    }, GAME_CONFIG.ANIMATION_DURATION);\n  }, [calculateResult, selectedBet, timeSlot]);\n\n  // Handle controller button inputs\n  useEffect(() => {\n    if (gameState !== 'betting') return;\n    \n    const currentButtons = pressedButtonsRef.current || {};\n    const prevButtons = prevPressedButtonsRef.current || {};\n    \n    // Check if a button was just pressed\n    const isButtonJustPressed = (buttonCode) => {\n      return currentButtons[buttonCode] && !prevButtons[buttonCode];\n    };\n\n    if (isButtonJustPressed(BUTTONS.LEFT)) {\n      setSelectedBet(prev => Math.max(prev - 1, GAME_CONFIG.MIN_BET));\n    } else if (isButtonJustPressed(BUTTONS.RIGHT)) {\n      setSelectedBet(prev => Math.min(prev + 1, timeSlot));\n    } else if (isButtonJustPressed(BUTTONS.A)) {\n      handleSpin();\n    }\n    \n    // Update previous button state reference\n    prevPressedButtonsRef.current = { ...currentButtons };\n  }, [pressedButtons, gameState, timeSlot, handleSpin]);\n\n  // Handle click to complete game and return to main game flow\n  const handleGameComplete = () => {\n    if (gameState === 'result') {\n      // Calculate new time based on winnings\n      const newTimeValue = result.multiplier > 0 ? (result.winnings - selectedBet) : 0;\n      \n      // Call parent callback with the new time value\n      onSlotComplete(newTimeValue);\n    }\n  };\n\n  return (\n    <div className={`slot-overlay game-state-${gameState}`} onClick={handleGameComplete}>\n      <div className={`slot-container ${animating ? 'animating' : ''}`}>\n        <SlotHeader />\n        \n        {gameState === 'betting' && (\n          <>\n            <BetControls selectedBet={selectedBet} maxBet={timeSlot} />\n            <Instructions />\n          </>\n        )}\n        \n        {gameState === 'spinning' && <AnimationDisplay />}\n        \n        {gameState === 'result' && <ResultDisplay result={result} />}\n      </div>\n    </div>\n  );\n}\n\nexport default SlotTime;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}