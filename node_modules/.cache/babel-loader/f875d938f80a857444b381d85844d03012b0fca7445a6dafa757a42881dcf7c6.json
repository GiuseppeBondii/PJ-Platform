{"ast":null,"code":"var _jsxFileName = \"/Users/giuseppebondi/Documents/GitHub/platform/src/components/EmuSchermo.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./EmuSchermo.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BUTTONS = {\n  A: 1,\n  B: 2,\n  START: 3,\n  SELECT: 4,\n  UP: 5,\n  DOWN: 6,\n  LEFT: 7,\n  RIGHT: 8\n};\nfunction EmuSchermo({\n  button\n}) {\n  _s();\n  // Dimensioni e costanti espresse in percentuali\n\n  const [ButtonPressed, setButtonPressed] = useState(0);\n  const ballSize = 5; // 5% del container\n  const moveSpeed = 2; // Incremento orizzontale in percentuale\n  const jumpVelocity = 8; // Velocità iniziale del salto (in % per frame)\n  const gravity = -0.5; // Gravità in % per frame\n\n  // Stato della pallina: x e y sono in percentuale\n  const [ball, setBall] = useState({\n    x: 50 - ballSize / 2,\n    // Centrata orizzontalmente\n    y: 0,\n    // In posizione \"a terra\" (0% dal fondo)\n    velocity: 0\n  });\n  a;\n  useEffect(() => {\n    switch (button) {\n      case BUTTONS.A:\n        setButtonPressed(BUTTONS.A);\n        break;\n      case BUTTONS.B:\n        setButtonPressed(BUTTONS.B);\n        break;\n      case BUTTONS.START:\n        setButtonPressed(BUTTONS.START);\n        break;\n      case BUTTONS.SELECT:\n        setButtonPressed(BUTTONS.SELECT);\n        break;\n      case BUTTONS.UP:\n        setButtonPressed(BUTTONS.UP);\n        break;\n      case BUTTONS.DOWN:\n        setButtonPressed(BUTTONS.DOWN);\n        break;\n      case BUTTONS.LEFT:\n        setButtonPressed(BUTTONS.LEFT);\n        break;\n      case BUTTONS.RIGHT:\n        setButtonPressed(BUTTONS.RIGHT);\n        break;\n      default:\n        setButtonPressed(0);\n        break;\n    }\n  }, [ball]);\n\n  // Ciclo di animazione per l'aggiornamento verticale (approssimativamente 60 fps)\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setBall(prev => {\n        if (prev.y > 0 || prev.velocity !== 0) {\n          let newVelocity = prev.velocity + gravity;\n          let newY = prev.y + prev.velocity;\n          if (newY < 0) {\n            newY = 0;\n            newVelocity = 0;\n          }\n          return {\n            ...prev,\n            y: newY,\n            velocity: newVelocity\n          };\n        }\n        return prev;\n      });\n    }, 10);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Gestione degli input per muovere la pallina\n  useEffect(() => {\n    if (button) {\n      setBall(prev => {\n        switch (ButtonPressed) {\n          case BUTTONS.LEFT:\n            {\n              let newX = prev.x - moveSpeed;\n              if (newX < 0) newX = 0;\n              return {\n                ...prev,\n                x: newX\n              };\n            }\n          case BUTTONS.RIGHT:\n            {\n              let newX = prev.x + moveSpeed;\n              if (newX > 100 - ballSize) newX = 100 - ballSize;\n              return {\n                ...prev,\n                x: newX\n              };\n            }\n          case BUTTONS.UP:\n            {\n              // Salta solo se la pallina è sul \"terreno\"\n              if (prev.y === 0) {\n                return {\n                  ...prev,\n                  velocity: jumpVelocity\n                };\n              }\n              return prev;\n            }\n          default:\n            return prev;\n        }\n      });\n    }\n  }, [button]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"emu-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ball\",\n      style: {\n        left: `${ball.x}%`,\n        bottom: `${ball.y}%`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n}\n_s(EmuSchermo, \"jMPPdaQ/dOpOhDT6S1WFCPwvlsE=\");\n_c = EmuSchermo;\nexport default EmuSchermo;\nvar _c;\n$RefreshReg$(_c, \"EmuSchermo\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","BUTTONS","A","B","START","SELECT","UP","DOWN","LEFT","RIGHT","EmuSchermo","button","_s","ButtonPressed","setButtonPressed","ballSize","moveSpeed","jumpVelocity","gravity","ball","setBall","x","y","velocity","a","interval","setInterval","prev","newVelocity","newY","clearInterval","newX","className","children","style","left","bottom","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/giuseppebondi/Documents/GitHub/platform/src/components/EmuSchermo.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./EmuSchermo.css\";\n\nconst BUTTONS = {\n  A: 1,\n  B: 2,\n  START: 3,\n  SELECT: 4,\n  UP: 5,\n  DOWN: 6,\n  LEFT: 7,\n  RIGHT: 8,\n};\n\nfunction EmuSchermo({ button }) {\n  // Dimensioni e costanti espresse in percentuali\n\n  const [ButtonPressed,  setButtonPressed] = useState(0)\n\n  const ballSize = 5;      // 5% del container\n  const moveSpeed = 2;     // Incremento orizzontale in percentuale\n  const jumpVelocity = 8; // Velocità iniziale del salto (in % per frame)\n  const gravity = -0.5;    // Gravità in % per frame\n\n    // Stato della pallina: x e y sono in percentuale\n    const [ball, setBall] = useState({\n        x: 50 - ballSize / 2, // Centrata orizzontalmente\n        y: 0,               // In posizione \"a terra\" (0% dal fondo)\n        velocity: 0,\n      });\na    \n  \n  useEffect (() =>{\n    switch (button){\n        case BUTTONS.A:\n            setButtonPressed(BUTTONS.A);\n            break;\n        case BUTTONS.B:\n            setButtonPressed(BUTTONS.B);\n            break;\n        case BUTTONS.START:\n            setButtonPressed(BUTTONS.START);\n        break;\n        case BUTTONS.SELECT:\n            setButtonPressed(BUTTONS.SELECT);\n            break;\n        case BUTTONS.UP:\n            setButtonPressed(BUTTONS.UP);\n            break;\n        case BUTTONS.DOWN:\n            setButtonPressed(BUTTONS.DOWN);\n            break;\n        case BUTTONS.LEFT:\n            setButtonPressed(BUTTONS.LEFT);\n            break;\n        case BUTTONS.RIGHT:\n            setButtonPressed(BUTTONS.RIGHT);\n            break;\n        default:\n            setButtonPressed(0);\n            break;\n    }\n  }, [ball]);\n\n\n  // Ciclo di animazione per l'aggiornamento verticale (approssimativamente 60 fps)\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setBall(prev => {\n        if (prev.y > 0 || prev.velocity !== 0) {\n          let newVelocity = prev.velocity + gravity;\n          let newY = prev.y + prev.velocity;\n          if (newY < 0) {\n            newY = 0;\n            newVelocity = 0;\n          }\n          return { ...prev, y: newY, velocity: newVelocity };\n        }\n        return prev;\n      });\n    }, 10);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Gestione degli input per muovere la pallina\n  useEffect(() => {\n    if (button) {\n      setBall(prev => {\n        switch (ButtonPressed) {\n          case BUTTONS.LEFT: {\n            let newX = prev.x - moveSpeed;\n            if (newX < 0) newX = 0;\n            return { ...prev, x: newX };\n          }\n          case BUTTONS.RIGHT: {\n            let newX = prev.x + moveSpeed;\n            if (newX > 100 - ballSize) newX = 100 - ballSize;\n            return { ...prev, x: newX };\n          }\n          case BUTTONS.UP: {\n            // Salta solo se la pallina è sul \"terreno\"\n            if (prev.y === 0) {\n              return { ...prev, velocity: jumpVelocity };\n            }\n            return prev;\n          }\n          default:\n            return prev;\n        }\n      });\n    }\n  }, [button]);\n\n  return (\n    <div className=\"emu-container\">\n      <div\n        className=\"ball\"\n        style={{\n          left: `${ball.x}%`,\n          bottom: `${ball.y}%`,\n        }}\n      ></div>\n    </div>\n  );\n}\n\nexport default EmuSchermo;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}