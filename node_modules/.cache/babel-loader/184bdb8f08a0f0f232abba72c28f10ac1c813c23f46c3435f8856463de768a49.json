{"ast":null,"code":"var _jsxFileName = \"/Users/giuseppebondi/Documents/GitHub/platform/src/components/EmuSchermo.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./EmuSchermo.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BUTTONS = {\n  A: 1,\n  B: 2,\n  START: 3,\n  SELECT: 4,\n  UP: 5,\n  DOWN: 6,\n  LEFT: 7,\n  RIGHT: 8\n};\nfunction EmuSchermo({\n  button\n}) {\n  _s();\n  // Costanti espresse in percentuali\n  const ballSize = 5; // dimensione della pallina in %\n  const moveSpeed = 2; // spostamento orizzontale in % per tick\n  const jumpVelocity = 10; // velocità iniziale di salto in % per tick\n  const gravity = -0.5; // gravità in % per tick\n\n  // Stato della pallina: x, y e velocità verticali in percentuali\n  const [ball, setBall] = useState({\n    x: 50 - ballSize / 2,\n    // centrata orizzontalmente\n    y: 0,\n    // posizione \"a terra\"\n    velocity: 0\n  });\n\n  // Utilizziamo un ref per tenere traccia dell'ultimo pulsante ricevuto\n  const buttonRef = useRef(button);\n  useEffect(() => {\n    buttonRef.current = button;\n  }, [button]);\n\n  // Effetto per aggiornare la fisica della pallina a intervalli regolari\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setBall(prev => {\n        let newX = prev.x;\n        // Controlla se c'è un pulsante attivo\n        const currentButton = buttonRef.current;\n        if (currentButton) {\n          switch (currentButton) {\n            case BUTTONS.LEFT:\n              newX = Math.max(prev.x - moveSpeed, 0);\n              break;\n            case BUTTONS.RIGHT:\n              newX = Math.min(prev.x + moveSpeed, 100 - ballSize);\n              break;\n            case BUTTONS.UP:\n              // Salta solo se la pallina è sul terreno\n              if (prev.y === 0) {\n                // Imposta immediatamente la velocità per il salto\n                return {\n                  ...prev,\n                  velocity: jumpVelocity\n                };\n              }\n              break;\n            default:\n              break;\n          }\n        }\n        // Aggiornamento della fisica verticale\n        let newVelocity = prev.velocity + gravity;\n        let newY = prev.y + prev.velocity;\n        if (newY < 0) {\n          newY = 0;\n          newVelocity = 0;\n        }\n        return {\n          ...prev,\n          x: newX,\n          y: newY,\n          velocity: newVelocity\n        };\n      });\n    }, 16); // circa 60 fps\n    return () => clearInterval(interval);\n  }, []); // l'effetto viene avviato una sola volta\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"emu-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ball\",\n      style: {\n        left: `${ball.x}%`,\n        bottom: `${ball.y}%`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_s(EmuSchermo, \"Op6jF/LJCueWy7Paj1Q3L+WOTRU=\");\n_c = EmuSchermo;\nexport default EmuSchermo;\nvar _c;\n$RefreshReg$(_c, \"EmuSchermo\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","BUTTONS","A","B","START","SELECT","UP","DOWN","LEFT","RIGHT","EmuSchermo","button","_s","ballSize","moveSpeed","jumpVelocity","gravity","ball","setBall","x","y","velocity","buttonRef","current","interval","setInterval","prev","newX","currentButton","Math","max","min","newVelocity","newY","clearInterval","className","children","style","left","bottom","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/giuseppebondi/Documents/GitHub/platform/src/components/EmuSchermo.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport \"./EmuSchermo.css\";\n\nconst BUTTONS = {\n  A: 1,\n  B: 2,\n  START: 3,\n  SELECT: 4,\n  UP: 5,\n  DOWN: 6,\n  LEFT: 7,\n  RIGHT: 8,\n};\n\nfunction EmuSchermo({ button }) {\n  // Costanti espresse in percentuali\n  const ballSize = 5;      // dimensione della pallina in %\n  const moveSpeed = 2;     // spostamento orizzontale in % per tick\n  const jumpVelocity = 10; // velocità iniziale di salto in % per tick\n  const gravity = -0.5;    // gravità in % per tick\n\n  // Stato della pallina: x, y e velocità verticali in percentuali\n  const [ball, setBall] = useState({\n    x: 50 - ballSize / 2, // centrata orizzontalmente\n    y: 0,                 // posizione \"a terra\"\n    velocity: 0,\n  });\n\n  // Utilizziamo un ref per tenere traccia dell'ultimo pulsante ricevuto\n  const buttonRef = useRef(button);\n  useEffect(() => {\n    buttonRef.current = button;\n  }, [button]);\n\n  // Effetto per aggiornare la fisica della pallina a intervalli regolari\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setBall(prev => {\n        let newX = prev.x;\n        // Controlla se c'è un pulsante attivo\n        const currentButton = buttonRef.current;\n        if (currentButton) {\n          switch (currentButton) {\n            case BUTTONS.LEFT:\n              newX = Math.max(prev.x - moveSpeed, 0);\n              break;\n            case BUTTONS.RIGHT:\n              newX = Math.min(prev.x + moveSpeed, 100 - ballSize);\n              break;\n            case BUTTONS.UP:\n              // Salta solo se la pallina è sul terreno\n              if (prev.y === 0) {\n                // Imposta immediatamente la velocità per il salto\n                return { ...prev, velocity: jumpVelocity };\n              }\n              break;\n            default:\n              break;\n          }\n        }\n        // Aggiornamento della fisica verticale\n        let newVelocity = prev.velocity + gravity;\n        let newY = prev.y + prev.velocity;\n        if (newY < 0) {\n          newY = 0;\n          newVelocity = 0;\n        }\n        return { ...prev, x: newX, y: newY, velocity: newVelocity };\n      });\n    }, 16); // circa 60 fps\n    return () => clearInterval(interval);\n  }, []); // l'effetto viene avviato una sola volta\n\n  return (\n    <div className=\"emu-container\">\n      <div\n        className=\"ball\"\n        style={{\n          left: `${ball.x}%`,\n          bottom: `${ball.y}%`,\n        }}\n      ></div>\n    </div>\n  );\n}\n\nexport default EmuSchermo;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}