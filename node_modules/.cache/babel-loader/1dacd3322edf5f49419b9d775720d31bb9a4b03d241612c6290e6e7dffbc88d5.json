{"ast":null,"code":"import React,{useState,useEffect,useRef}from\"react\";import\"./EmuSchermo.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const maxHorizontalSpeed=1.2;const jumpVelocity=6;const gravity=-0.5;const BUTTONS={A:1,B:2,START:3,SELECT:4,LEFT:7,RIGHT:8};// Parametri per la generazione\nconst screenHeight=80;// Altezza massima dello schermo\nconst maxX=100;// Larghezza massima orizzontale\nconst minWidth=10;const maxWidth=30;const minVertical=5;const maxVertical=20;const marginSafety=1;// Margine di sicurezza orizzontale per il salto\n// Parametri per la generazione pseudo-casuale\nfunction createSeededRandom(seed){const a=Math.floor(Math.random()*10000000000);const c=Math.floor(Math.random()*10000000000);const m=2**32;let state=seed;return function(){state=(a*state+c)%m;return state/m;};}// Funzione che calcola il tempo di volo disponibile per un salto data la differenza verticale dy\nfunction getFlightTime(dy){// Se il target è sopra (dy > 0) il tempo di volo è minore\nif(dy>0){// Risolve: 0.5*gravity*t^2 + jumpVelocity*t - dy = 0\n// Poiché gravity è negativo, usiamo la formula corretta per ottenere il tempo positivo\nreturn(jumpVelocity+Math.sqrt(jumpVelocity*jumpVelocity+-2*gravity*dy))/-gravity;}else{// Se il target è allo stesso livello o più in basso, consideriamo il tempo d'aria massimo (salto completo)\nreturn 2*jumpVelocity/-gravity;}}// Calcola la distanza orizzontale massima raggiungibile per una data differenza verticale dy\nfunction getMaxHorizontalDistance(dy){const t=getFlightTime(dy);return maxHorizontalSpeed*t;}function generateLevel(seed){const rand=createSeededRandom(seed);const platforms=[];// Genera la piattaforma di partenza (base)\nconst baseHeight=15;const firstWidth=Math.floor(rand()*(maxWidth-minWidth+1))+minWidth;const firstPosStartX=Math.floor(rand()*(maxX-firstWidth));const firstPosEndX=firstPosStartX+firstWidth;platforms.push({type:'p',height:baseHeight,posStartX:firstPosStartX,posEndX:firstPosEndX});let prev=platforms[0];// Genera piattaforme intermedie fino a rimanere entro screenHeight\n// L'ultima piattaforma verrà forzata ad essere il traguardo (T)\nwhile(true){// Scegli un incremento verticale che non superi l'altezza massima dello schermo\nconst verticalIncrement=Math.floor(rand()*(maxVertical-minVertical+1))+minVertical;const newHeight=prev.height+verticalIncrement;if(newHeight>screenHeight-10){// Se il prossimo salto supererebbe quasi lo screenHeight, usciamo dal ciclo.\nbreak;}// Calcola la distanza massima orizzontale raggiungibile per questo salto\nconst maxReach=getMaxHorizontalDistance(verticalIncrement)-marginSafety;// Per sicurezza, limitiamo il gap tra le piattaforme a un valore ragionevole (almeno 2 e al massimo quanto raggiungibile o un valore fisso)\nconst gap=Math.floor(Math.min(rand()*(maxReach-2)+2,13// oppure si può usare 13 se si preferisce una soglia fissa\n));// Scegli casualmente la direzione: 1 = a destra, -1 = a sinistra\nlet direction=rand()<0.5?1:-1;let posStartX;if(direction===1){// Prova a posizionare a destra della precedente piattaforma\nif(prev.posEndX+gap+minWidth<=maxX){posStartX=prev.posEndX+gap;}else if(prev.posStartX-gap-minWidth>=0){// Se non c'è spazio a destra, prova a sinistra\ndirection=-1;posStartX=prev.posStartX-gap-minWidth;}else{// Forza il posizionamento in caso di spazio ristretto\nposStartX=Math.max(0,maxX-minWidth);}}else{// Prova a posizionare a sinistra della precedente\nif(prev.posStartX-gap-minWidth>=0){posStartX=prev.posStartX-gap-minWidth;}else if(prev.posEndX+gap+minWidth<=maxX){// Se non c'è spazio a sinistra, prova a destra\ndirection=1;posStartX=prev.posEndX+gap;}else{posStartX=0;}}// La larghezza della piattaforma la scegliamo casualmente entro i limiti, senza superare il bordo\nconst width=Math.min(Math.floor(rand()*(maxWidth-minWidth+1))+minWidth,maxX-posStartX);const posEndX=posStartX+width;// Determina il tipo: di default è \"p\" (hazard), ma c'è una possibilità del 20% di aggiungere spike (tipo \"s\")\nlet type=\"p\";if(rand()<0.3+seed/50){type=\"s\";}const platform={type,height:newHeight,posStartX,posEndX};platforms.push(platform);prev=platform;}// Aggiungi la piattaforma finale \"T\" (traguardo) in una posizione raggiungibile dall'ultima piattaforma\n// Per farlo, scegliamo un incremento verticale che faccia rimanere il traguardo entro lo screenHeight\nconst remainingVertical=screenHeight-prev.height;// Se remainingVertical è troppo piccolo, possiamo impostare un piccolo incremento\nconst finalVerticalIncrement=remainingVertical>minVertical?Math.floor(rand()*(Math.min(maxVertical,remainingVertical)-minVertical+1))+minVertical:remainingVertical;const newHeight=prev.height+finalVerticalIncrement;const maxReach=getMaxHorizontalDistance(finalVerticalIncrement)-marginSafety;const gap=Math.floor(Math.min(rand()*(maxReach-2)+2,13));let direction=rand()<0.5?1:-1;let posStartX;if(direction===1){if(prev.posEndX+gap+minWidth<=maxX){posStartX=prev.posEndX+gap;}else if(prev.posStartX-gap-minWidth>=0){direction=-1;posStartX=prev.posStartX-gap-minWidth;}else{posStartX=Math.max(0,maxX-minWidth);}}else{if(prev.posStartX-gap-minWidth>=0){posStartX=prev.posStartX-gap-minWidth;}else if(prev.posEndX+gap+minWidth<=maxX){direction=1;posStartX=prev.posEndX+gap;}else{posStartX=0;}}const width=Math.min(Math.floor(rand()*(maxWidth-minWidth+1))+minWidth,maxX-posStartX);const posEndX=posStartX+width;// La piattaforma finale è il traguardo \"T\"\nplatforms.push({type:\"T\",height:newHeight,posStartX,posEndX});return platforms;}function EmuSchermo(_ref){let{pressedButtons}=_ref;const ballSize=4;const horizontalAcceleration=0.2;const maxHorizontalSpeed=1.2;const friction=0.1;const jumpVelocity=6;const gravity=-0.5;// Stato di gioco: \"countdown\", \"playing\", \"gameOver\"\nconst[gameState,setGameState]=useState(\"countdown\");const[countdown,setCountdown]=useState(3);const[timeLeft,setTimeLeft]=useState(30);const[record,setRecord]=useState(0);const[level,setLevel]=useState(1);const[LEVEL,SETLEVEL]=useState(generateLevel(1));const platformsRef=useRef(LEVEL);useEffect(()=>{platformsRef.current=LEVEL;},[LEVEL]);const[ball,setBall]=useState({x:2,y:0,vx:0,vy:0});const pressedButtonsRef=useRef(pressedButtons);useEffect(()=>{pressedButtonsRef.current=pressedButtons;},[pressedButtons]);const animationFrameId=useRef(null);function renderImpact(x,y){return/*#__PURE__*/_jsx(\"div\",{style:{position:'absolute',// Posizionamento assoluto\nleft:`${x}%`,// Posizione orizzontale in percentuale\nbottom:`${y}%`,// Posizione verticale in percentuale\nheight:`${ballSize+5}%`},children:\"- 10 s\"});}// Countdown iniziale di 3 secondi\nuseEffect(()=>{if(gameState===\"countdown\"){const countdownInterval=setInterval(()=>{setCountdown(prev=>{if(prev<=1){clearInterval(countdownInterval);setGameState(\"playing\");return 0;}return prev-1;});},1000);return()=>clearInterval(countdownInterval);}},[gameState]);// Timer di gioco: decrementa ogni secondo durante il gioco\nuseEffect(()=>{if(gameState===\"playing\"){const timerInterval=setInterval(()=>{setTimeLeft(prev=>{if(prev<=1){clearInterval(timerInterval);setGameState(\"gameOver\");return 0;}return prev-1;});},1000);return()=>clearInterval(timerInterval);}},[gameState]);// Loop di aggiornamento del gioco (solo se in stato \"playing\")\nuseEffect(()=>{if(gameState!==\"playing\")return;const update=()=>{setBall(prev=>{let{x,y,vx,vy}=prev;const currentPressedButtons=pressedButtonsRef.current||{};// Gestione input orizzontale\nif(currentPressedButtons[BUTTONS.LEFT])vx-=horizontalAcceleration;if(currentPressedButtons[BUTTONS.RIGHT])vx+=horizontalAcceleration;if(!currentPressedButtons[BUTTONS.LEFT]&&!currentPressedButtons[BUTTONS.RIGHT]){vx=vx>0?Math.max(vx-friction,0):Math.min(vx+friction,0);}vx=Math.min(Math.max(vx,-maxHorizontalSpeed),maxHorizontalSpeed);// Controllo per permettere il salto (a terra o su piattaforma)\nconst isOnGroundOrPlatform=y===0||platformsRef.current.some(p=>{const platformTop=p.height+2;const horizontalOverlap=x<=p.posEndX&&x+ballSize>=p.posStartX;return y===platformTop&&horizontalOverlap;});if(currentPressedButtons[BUTTONS.A]&&isOnGroundOrPlatform){vy=jumpVelocity;}vy+=gravity;let newY=y+vy;let newX=x+vx;// Collisione base con piattaforme (aterraggio/scontro)\nlet collided=false;platformsRef.current.forEach(platform=>{const platformTop=platform.height+2;const platformBottom=platform.height;const horizontalOverlap=newX<platform.posEndX&&newX+ballSize>platform.posStartX;const verticalOverlap=newY<=platformTop&&newY+ballSize>=platformBottom;if(horizontalOverlap&&verticalOverlap){const prevBottom=y+ballSize;if(prevBottom<=platformBottom&&vy>0){// Salto contro la piattaforma\nnewY=platformBottom-ballSize;vy=0;}else if(vy<=0){// Atterraggio sulla piattaforma\nnewY=platformTop;vy=0;}collided=true;}});if(!collided&&newY<0){newY=0;vy=0;}newX=Math.max(0,Math.min(newX,100-ballSize));// Gestione collisione con spike (\"s\") e traguardo (\"T\")\nfor(const platform of platformsRef.current){if(platform.type===\"s\"){const spikeLeft=platform.posStartX;const spikeRight=platform.posEndX;const spikeBottom=platform.height;const spikeTop=platform.height+3;const horizontalCollision=x+ballSize>spikeLeft&&x<spikeRight;const verticalCollision=y<spikeTop&&y+ballSize>spikeBottom&&vy<=0;if(horizontalCollision&&verticalCollision){setTimeLeft(prev=>prev-10);renderImpact(x,y);platform.type=\"p\";break;}}else if(platform.type===\"T\"){const goalLeft=platform.posStartX;const goalRight=platform.posEndX;const goalBottom=platform.height;const goalTop=platform.height+3;const horizontalCollision=x+ballSize>goalLeft&&x<goalRight;const verticalCollision=y<goalTop&&y+ballSize>goalBottom&&vy<=0;if(horizontalCollision&&verticalCollision){// Aggiunge 15 secondi e passa al livello successivo\nsetTimeLeft(prev=>prev+5);const newLevel=level+1;setLevel(newLevel);SETLEVEL(generateLevel(newLevel));newX=2;newY=0;vx=0;vy=0;break;}}}return{x:newX,y:newY,vx,vy};});animationFrameId.current=requestAnimationFrame(update);};animationFrameId.current=requestAnimationFrame(update);return()=>cancelAnimationFrame(animationFrameId.current);},[gameState,level,ballSize,horizontalAcceleration,friction,maxHorizontalSpeed,jumpVelocity,gravity]);// Funzione per ripartire la partita (Play Again)\nconst handlePlayAgain=()=>{setLevel(1);SETLEVEL(generateLevel(1));setBall({x:2,y:0,vx:0,vy:0});setTimeLeft(30);setCountdown(3);setGameState(\"countdown\");};useEffect(()=>{if(gameState===\"gameOver\"){const storedRecord=localStorage.getItem(\"record\")?parseInt(localStorage.getItem(\"record\"),10):0;if(level>storedRecord){localStorage.setItem(\"record\",level);setRecord(level);}else{setRecord(storedRecord);}}},[gameState,level]);return/*#__PURE__*/_jsxs(\"div\",{className:\"emu-container\",children:[gameState===\"countdown\"&&/*#__PURE__*/_jsx(\"div\",{className:\"countdown-overlay\",children:/*#__PURE__*/_jsx(\"h1\",{children:countdown})}),gameState===\"gameOver\"&&/*#__PURE__*/_jsxs(\"div\",{className:\"gameover-overlay\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Game Over\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Livello raggiunto: \",level]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Record: \",record]}),/*#__PURE__*/_jsx(\"button\",{className:\"playAgainButton\",onClick:handlePlayAgain,children:\"Play Again\"})]}),gameState===\"playing\"&&/*#__PURE__*/_jsxs(\"div\",{className:\"hud\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Time: \",timeLeft]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Level: \",level]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"ball\",style:{left:`${ball.x}%`,bottom:`${ball.y}%`,width:`${ballSize}%`,height:`${ballSize+2}%`}}),LEVEL.map((item,i)=>{if(item.type===\"T\"){return/*#__PURE__*/_jsx(\"div\",{className:\"t-platform\",style:{left:`${item.posStartX}%`,width:`${item.posEndX-item.posStartX}%`,bottom:`${item.height}%`,height:\"2%\"}},i);}else if(item.type===\"p\"){return/*#__PURE__*/_jsx(\"div\",{className:\"platform\",style:{left:`${item.posStartX}%`,width:`${item.posEndX-item.posStartX}%`,bottom:`${item.height}%`,height:\"2%\"}},i);}else{return/*#__PURE__*/_jsx(\"div\",{className:\"spike\",style:{left:`${item.posStartX}%`,width:`${item.posEndX-item.posStartX}%`,bottom:`${item.height}%`,height:\"2%\"}},i);}})]});}export default EmuSchermo;","map":{"version":3,"names":["React","useState","useEffect","useRef","jsx","_jsx","jsxs","_jsxs","maxHorizontalSpeed","jumpVelocity","gravity","BUTTONS","A","B","START","SELECT","LEFT","RIGHT","screenHeight","maxX","minWidth","maxWidth","minVertical","maxVertical","marginSafety","createSeededRandom","seed","a","Math","floor","random","c","m","state","getFlightTime","dy","sqrt","getMaxHorizontalDistance","t","generateLevel","rand","platforms","baseHeight","firstWidth","firstPosStartX","firstPosEndX","push","type","height","posStartX","posEndX","prev","verticalIncrement","newHeight","maxReach","gap","min","direction","max","width","platform","remainingVertical","finalVerticalIncrement","EmuSchermo","_ref","pressedButtons","ballSize","horizontalAcceleration","friction","gameState","setGameState","countdown","setCountdown","timeLeft","setTimeLeft","record","setRecord","level","setLevel","LEVEL","SETLEVEL","platformsRef","current","ball","setBall","x","y","vx","vy","pressedButtonsRef","animationFrameId","renderImpact","style","position","left","bottom","children","countdownInterval","setInterval","clearInterval","timerInterval","update","currentPressedButtons","isOnGroundOrPlatform","some","p","platformTop","horizontalOverlap","newY","newX","collided","forEach","platformBottom","verticalOverlap","prevBottom","spikeLeft","spikeRight","spikeBottom","spikeTop","horizontalCollision","verticalCollision","goalLeft","goalRight","goalBottom","goalTop","newLevel","requestAnimationFrame","cancelAnimationFrame","handlePlayAgain","storedRecord","localStorage","getItem","parseInt","setItem","className","onClick","map","item","i"],"sources":["/Users/giuseppebondi/Documents/GitHub/PJ-Platform/src/components/EmuSchermo.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport \"./EmuSchermo.css\";\n\nconst maxHorizontalSpeed = 1.2;\nconst jumpVelocity = 6;\nconst gravity = -0.5;\n\nconst BUTTONS = {\n  A: 1,\n  B: 2,\n  START: 3,\n  SELECT: 4,\n  LEFT: 7,\n  RIGHT: 8,\n};\n\n// Parametri per la generazione\nconst screenHeight = 80; // Altezza massima dello schermo\nconst maxX = 100;        // Larghezza massima orizzontale\nconst minWidth = 10;\nconst maxWidth = 30;\nconst minVertical = 5;\nconst maxVertical = 20;\nconst marginSafety = 1;  // Margine di sicurezza orizzontale per il salto\n\n// Parametri per la generazione pseudo-casuale\n\n\nfunction createSeededRandom(seed) {\n  const a = Math.floor(Math.random() * 10000000000);\n  const c = Math.floor(Math.random() * 10000000000);\n  const m = 2 ** 32;\n  let state = seed;\n  return function () {\n    state = (a * state + c) % m;\n    return state / m;\n  };\n}\n\n// Funzione che calcola il tempo di volo disponibile per un salto data la differenza verticale dy\nfunction getFlightTime(dy) {\n  // Se il target è sopra (dy > 0) il tempo di volo è minore\n  if (dy > 0) {\n    // Risolve: 0.5*gravity*t^2 + jumpVelocity*t - dy = 0\n    // Poiché gravity è negativo, usiamo la formula corretta per ottenere il tempo positivo\n    return (jumpVelocity + Math.sqrt(jumpVelocity * jumpVelocity + (-2 * gravity * dy))) / (-gravity);\n  } else {\n    // Se il target è allo stesso livello o più in basso, consideriamo il tempo d'aria massimo (salto completo)\n    return 2 * jumpVelocity / (-gravity);\n  }\n}\n\n// Calcola la distanza orizzontale massima raggiungibile per una data differenza verticale dy\nfunction getMaxHorizontalDistance(dy) {\n  const t = getFlightTime(dy);\n  return maxHorizontalSpeed * t;\n}\n\nfunction generateLevel(seed) {\n  const rand = createSeededRandom(seed);\n  const platforms = [];\n\n  // Genera la piattaforma di partenza (base)\n  const baseHeight = 15;\n  const firstWidth = Math.floor(rand() * (maxWidth - minWidth + 1)) + minWidth;\n  const firstPosStartX = Math.floor(rand() * (maxX - firstWidth));\n  const firstPosEndX = firstPosStartX + firstWidth;\n  platforms.push({\n    type: 'p',\n    height: baseHeight,\n    posStartX: firstPosStartX,\n    posEndX: firstPosEndX\n  });\n\n  let prev = platforms[0];\n\n  // Genera piattaforme intermedie fino a rimanere entro screenHeight\n  // L'ultima piattaforma verrà forzata ad essere il traguardo (T)\n  while (true) {\n    // Scegli un incremento verticale che non superi l'altezza massima dello schermo\n    const verticalIncrement = Math.floor(rand() * (maxVertical - minVertical + 1)) + minVertical;\n    const newHeight = prev.height + verticalIncrement;\n    if (newHeight > screenHeight - 10) { \n      // Se il prossimo salto supererebbe quasi lo screenHeight, usciamo dal ciclo.\n      break;\n    }\n    \n    // Calcola la distanza massima orizzontale raggiungibile per questo salto\n    const maxReach = getMaxHorizontalDistance(verticalIncrement) - marginSafety;\n    \n    // Per sicurezza, limitiamo il gap tra le piattaforme a un valore ragionevole (almeno 2 e al massimo quanto raggiungibile o un valore fisso)\n    const gap = Math.floor(Math.min(\n      (rand() * (maxReach - 2) + 2),\n      13  // oppure si può usare 13 se si preferisce una soglia fissa\n    ));\n    \n    // Scegli casualmente la direzione: 1 = a destra, -1 = a sinistra\n    let direction = rand() < 0.5 ? 1 : -1;\n    let posStartX;\n    \n    if (direction === 1) {\n      // Prova a posizionare a destra della precedente piattaforma\n      if (prev.posEndX + gap + minWidth <= maxX) {\n        posStartX = prev.posEndX + gap;\n      } else if (prev.posStartX - gap - minWidth >= 0) {\n        // Se non c'è spazio a destra, prova a sinistra\n        direction = -1;\n        posStartX = prev.posStartX - gap - minWidth;\n      } else {\n        // Forza il posizionamento in caso di spazio ristretto\n        posStartX = Math.max(0, maxX - minWidth);\n      }\n    } else {\n      // Prova a posizionare a sinistra della precedente\n      if (prev.posStartX - gap - minWidth >= 0) {\n        posStartX = prev.posStartX - gap - minWidth;\n      } else if (prev.posEndX + gap + minWidth <= maxX) {\n        // Se non c'è spazio a sinistra, prova a destra\n        direction = 1;\n        posStartX = prev.posEndX + gap;\n      } else {\n        posStartX = 0;\n      }\n    }\n    \n    // La larghezza della piattaforma la scegliamo casualmente entro i limiti, senza superare il bordo\n    const width = Math.min(\n      Math.floor(rand() * (maxWidth - minWidth + 1)) + minWidth,\n      maxX - posStartX\n    );\n    const posEndX = posStartX + width;\n    \n    // Determina il tipo: di default è \"p\" (hazard), ma c'è una possibilità del 20% di aggiungere spike (tipo \"s\")\n    let type = \"p\";\n    if (rand() < 0.3 + (seed / 50)) {\n      type = \"s\";\n    }\n    \n    const platform = {\n      type,\n      height: newHeight,\n      posStartX,\n      posEndX\n    };\n    platforms.push(platform);\n    prev = platform;\n  }\n  \n  // Aggiungi la piattaforma finale \"T\" (traguardo) in una posizione raggiungibile dall'ultima piattaforma\n  // Per farlo, scegliamo un incremento verticale che faccia rimanere il traguardo entro lo screenHeight\n  const remainingVertical = screenHeight - prev.height;\n  // Se remainingVertical è troppo piccolo, possiamo impostare un piccolo incremento\n  const finalVerticalIncrement = remainingVertical > minVertical ? \n    Math.floor(rand() * (Math.min(maxVertical, remainingVertical) - minVertical + 1)) + minVertical :\n    remainingVertical;\n  const newHeight = prev.height + finalVerticalIncrement;\n  const maxReach = getMaxHorizontalDistance(finalVerticalIncrement) - marginSafety;\n  const gap = Math.floor(Math.min((rand() * (maxReach - 2) + 2), 13));\n  let direction = rand() < 0.5 ? 1 : -1;\n  let posStartX;\n  \n  if (direction === 1) {\n    if (prev.posEndX + gap + minWidth <= maxX) {\n      posStartX = prev.posEndX + gap;\n    } else if (prev.posStartX - gap - minWidth >= 0) {\n      direction = -1;\n      posStartX = prev.posStartX - gap - minWidth;\n    } else {\n      posStartX = Math.max(0, maxX - minWidth);\n    }\n  } else {\n    if (prev.posStartX - gap - minWidth >= 0) {\n      posStartX = prev.posStartX - gap - minWidth;\n    } else if (prev.posEndX + gap + minWidth <= maxX) {\n      direction = 1;\n      posStartX = prev.posEndX + gap;\n    } else {\n      posStartX = 0;\n    }\n  }\n  \n  const width = Math.min(\n    Math.floor(rand() * (maxWidth - minWidth + 1)) + minWidth,\n    maxX - posStartX\n  );\n  const posEndX = posStartX + width;\n  \n  // La piattaforma finale è il traguardo \"T\"\n  platforms.push({\n    type: \"T\",\n    height: newHeight,\n    posStartX,\n    posEndX\n  });\n  \n  return platforms;\n}\n\n\n\nfunction EmuSchermo({ pressedButtons }) {\n  const ballSize = 4;\n  const horizontalAcceleration = 0.2;\n  const maxHorizontalSpeed = 1.2;\n  const friction = 0.1;\n  const jumpVelocity = 6;\n  const gravity = -0.5;\n\n  // Stato di gioco: \"countdown\", \"playing\", \"gameOver\"\n  const [gameState, setGameState] = useState(\"countdown\");\n  const [countdown, setCountdown] = useState(3);\n  const [timeLeft, setTimeLeft] = useState(30);\n  const [record, setRecord] = useState(0);\n\n\n  const [level, setLevel] = useState(1);\n  const [LEVEL, SETLEVEL] = useState(generateLevel(1));\n  const platformsRef = useRef(LEVEL);\n  useEffect(() => {\n    platformsRef.current = LEVEL;\n  }, [LEVEL]);\n\n  const [ball, setBall] = useState({\n    x: 2,\n    y: 0,\n    vx: 0,\n    vy: 0,\n  });\n\n  const pressedButtonsRef = useRef(pressedButtons);\n  useEffect(() => {\n    pressedButtonsRef.current = pressedButtons;\n  }, [pressedButtons]);\n\n  const animationFrameId = useRef(null);\n\n\n\n  function renderImpact(x, y) {\n    return (\n      <div\n        style={{\n          position: 'absolute', // Posizionamento assoluto\n          left: `${x}%`,        // Posizione orizzontale in percentuale\n          bottom: `${y}%`,      // Posizione verticale in percentuale\n          height: `${ballSize + 5}%`,\n        }}\n      >\n        - 10 s\n      </div>\n    );\n  }\n  \n\n  // Countdown iniziale di 3 secondi\n  useEffect(() => {\n    if (gameState === \"countdown\") {\n      const countdownInterval = setInterval(() => {\n        setCountdown(prev => {\n          if (prev <= 1) {\n            clearInterval(countdownInterval);\n            setGameState(\"playing\");\n            return 0;\n          }\n          return prev - 1;\n        });\n      }, 1000);\n      return () => clearInterval(countdownInterval);\n    }\n  }, [gameState]);\n\n  // Timer di gioco: decrementa ogni secondo durante il gioco\n  useEffect(() => {\n    if (gameState === \"playing\") {\n      const timerInterval = setInterval(() => {\n        setTimeLeft(prev => {\n          if (prev <= 1) {\n            clearInterval(timerInterval);\n            setGameState(\"gameOver\");\n            return 0;\n          }\n          return prev - 1;\n        });\n      }, 1000);\n      return () => clearInterval(timerInterval);\n    }\n  }, [gameState]);\n\n  // Loop di aggiornamento del gioco (solo se in stato \"playing\")\n  useEffect(() => {\n    if (gameState !== \"playing\") return;\n    \n    const update = () => {\n      setBall((prev) => {\n        let { x, y, vx, vy } = prev;\n        const currentPressedButtons = pressedButtonsRef.current || {};\n\n        // Gestione input orizzontale\n        if (currentPressedButtons[BUTTONS.LEFT]) vx -= horizontalAcceleration;\n        if (currentPressedButtons[BUTTONS.RIGHT]) vx += horizontalAcceleration;\n        if (!currentPressedButtons[BUTTONS.LEFT] && !currentPressedButtons[BUTTONS.RIGHT]) {\n          vx = vx > 0 ? Math.max(vx - friction, 0) : Math.min(vx + friction, 0);\n        }\n        vx = Math.min(Math.max(vx, -maxHorizontalSpeed), maxHorizontalSpeed);\n\n        // Controllo per permettere il salto (a terra o su piattaforma)\n        const isOnGroundOrPlatform =\n          y === 0 ||\n          platformsRef.current.some(p => {\n            const platformTop = p.height + 2;\n            const horizontalOverlap = (\n              x <= p.posEndX &&\n              (x + ballSize) >= p.posStartX\n            );\n            return y === platformTop && horizontalOverlap;\n          });\n\n        if (currentPressedButtons[BUTTONS.A] && isOnGroundOrPlatform) {\n          vy = jumpVelocity;\n        }\n\n        vy += gravity;\n        let newY = y + vy;\n        let newX = x + vx;\n\n        // Collisione base con piattaforme (aterraggio/scontro)\n        let collided = false;\n        platformsRef.current.forEach(platform => {\n          const platformTop = platform.height + 2;\n          const platformBottom = platform.height;\n          const horizontalOverlap = (\n            newX < platform.posEndX &&\n            (newX + ballSize) > platform.posStartX\n          );\n          const verticalOverlap = (\n            newY <= platformTop &&\n            (newY + ballSize) >= platformBottom\n          );\n          if (horizontalOverlap && verticalOverlap) {\n            const prevBottom = y + ballSize;\n            if (prevBottom <= platformBottom && vy > 0) {\n              // Salto contro la piattaforma\n              newY = platformBottom - ballSize;\n              vy = 0;\n            } else if (vy <= 0) {\n              // Atterraggio sulla piattaforma\n              newY = platformTop;\n              vy = 0;\n            }\n            collided = true;\n          }\n        });\n        if (!collided && newY < 0) {\n          newY = 0;\n          vy = 0;\n        }\n        newX = Math.max(0, Math.min(newX, 100 - ballSize));\n\n        // Gestione collisione con spike (\"s\") e traguardo (\"T\")\n        for (const platform of platformsRef.current) {\n          if (platform.type === \"s\") {\n            const spikeLeft = platform.posStartX;\n            const spikeRight = platform.posEndX;\n            const spikeBottom = platform.height;\n            const spikeTop = platform.height + 3;\n            const horizontalCollision = (x + ballSize > spikeLeft && x < spikeRight);\n            const verticalCollision = (y < spikeTop && y + ballSize > spikeBottom && vy <= 0);\n            if (horizontalCollision && verticalCollision) {\n              setTimeLeft(prev => prev - 10);\n              renderImpact(x,y)\n              platform.type = \"p\";\n              break;\n            }\n          } else if (platform.type === \"T\") {\n            const goalLeft = platform.posStartX;\n            const goalRight = platform.posEndX;\n            const goalBottom = platform.height;\n            const goalTop = platform.height + 3;\n            const horizontalCollision = (x + ballSize > goalLeft && x < goalRight);\n            const verticalCollision = (y < goalTop && y + ballSize > goalBottom && vy <= 0);\n            if (horizontalCollision && verticalCollision) {\n              // Aggiunge 15 secondi e passa al livello successivo\n              setTimeLeft(prev => prev + 5);\n              const newLevel = level + 1;\n              setLevel(newLevel);\n              SETLEVEL(generateLevel(newLevel));\n              newX = 2;\n              newY = 0;\n              vx = 0;\n              vy = 0;\n              break;\n            }\n          }\n        }\n\n        return { x: newX, y: newY, vx, vy };\n      });\n      animationFrameId.current = requestAnimationFrame(update);\n    };\n\n    animationFrameId.current = requestAnimationFrame(update);\n    return () => cancelAnimationFrame(animationFrameId.current);\n  }, [gameState, level, ballSize, horizontalAcceleration, friction, maxHorizontalSpeed, jumpVelocity, gravity]);\n\n  // Funzione per ripartire la partita (Play Again)\n  const handlePlayAgain = () => {\n    setLevel(1);\n    SETLEVEL(generateLevel(1));\n    setBall({ x: 2, y: 0, vx: 0, vy: 0 });\n    setTimeLeft(30);\n    setCountdown(3);\n    setGameState(\"countdown\");\n  };\n\n  useEffect(() => {\n    if (gameState === \"gameOver\") {\n      const storedRecord = localStorage.getItem(\"record\") ? parseInt(localStorage.getItem(\"record\"), 10) : 0;\n      if (level > storedRecord) {\n        localStorage.setItem(\"record\", level);\n        setRecord(level);\n      } else {\n        setRecord(storedRecord);\n      }\n    }\n  }, [gameState, level]);\n\n  return (\n    <div className=\"emu-container\">\n      {/* Overlay per il countdown iniziale */}\n      {gameState === \"countdown\" && (\n        <div className=\"countdown-overlay\">\n          <h1>{countdown}</h1>\n        </div>\n      )}\n\n    {/* Overlay Game Over */}\n    {gameState === \"gameOver\" && (\n        <div className=\"gameover-overlay\">\n          <h1>Game Over</h1>\n          <p>Livello raggiunto: {level}</p>\n          <p>Record: {record}</p>\n          <button className=\"playAgainButton\" onClick={handlePlayAgain}>Play Again</button>\n        </div>\n      )}\n\n      {/* HUD durante il gioco */}\n      {gameState === \"playing\" && (\n        <div className=\"hud\">\n          <p>Time: {timeLeft}</p>\n          <p>Level: {level}</p>\n        </div>\n      )}\n\n      <div\n        className=\"ball\"\n        style={{\n          left: `${ball.x}%`,\n          bottom: `${ball.y}%`,\n          width: `${ballSize}%`,\n          height: `${ballSize + 2}%`,\n        }}\n      ></div>\n\n      {LEVEL.map((item, i) => {\n        if (item.type === \"T\") {\n          return (\n            <div\n              key={i}\n              className=\"t-platform\"\n              style={{\n                left: `${item.posStartX}%`,\n                width: `${item.posEndX - item.posStartX}%`,\n                bottom: `${item.height}%`,\n                height: \"2%\",\n              }}\n            />\n          );\n        } else if (item.type === \"p\") {\n          return (\n            <div\n              key={i}\n              className=\"platform\"\n              style={{\n                left: `${item.posStartX}%`,\n                width: `${item.posEndX - item.posStartX}%`,\n                bottom: `${item.height}%`,\n                height: \"2%\",\n              }}\n            />\n          );\n        } else {\n          return (\n            <div\n              key={i}\n              className=\"spike\"\n              style={{\n                left: `${item.posStartX}%`,\n                width: `${item.posEndX - item.posStartX}%`,\n                bottom: `${item.height}%`,\n                height: \"2%\",\n              }}\n            />\n          );\n        }\n      })}\n    </div>\n  );\n}\n\n\nexport default EmuSchermo;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}