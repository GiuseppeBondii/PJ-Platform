{"ast":null,"code":"var _jsxFileName = \"/Users/giuseppebondi/Documents/GitHub/platform/src/components/EmuSchermo.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./EmuSchermo.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BUTTONS = {\n  A: 1,\n  B: 2,\n  START: 3,\n  SELECT: 4,\n  UP: 5,\n  DOWN: 6,\n  LEFT: 7,\n  RIGHT: 8\n};\nfunction EmuSchermo({\n  button\n}) {\n  _s();\n  // Dimensioni e costanti espresse in percentuali\n\n  const ballSize = 5; // 5% del container\n  const moveSpeed = 2; // Incremento orizzontale in percentuale\n  const jumpVelocity = 8; // Velocità iniziale del salto (in % per frame)\n  const gravity = -0.5; // Gravità in % per frame\n\n  // Stato della pallina: x e y sono in percentuale\n  const [ball, setBall] = useState({\n    x: 50 - ballSize / 2,\n    // Centrata orizzontalmente\n    y: 0,\n    // In posizione \"a terra\" (0% dal fondo)\n    velocity: 0\n  });\n\n  // Ciclo di animazione per l'aggiornamento verticale (approssimativamente 60 fps)\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setBall(prev => {\n        if (prev.y > 0 || prev.velocity !== 0) {\n          let newVelocity = prev.velocity + gravity;\n          let newY = prev.y + prev.velocity;\n          if (newY < 0) {\n            newY = 0;\n            newVelocity = 0;\n          }\n          return {\n            ...prev,\n            y: newY,\n            velocity: newVelocity\n          };\n        }\n        return prev;\n      });\n    }, 10);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Gestione degli input per muovere la pallina\n  useEffect(() => {\n    if (button) {\n      const interval = setInterval(() => {\n        setBall(prev => {\n          switch (button) {\n            case BUTTONS.LEFT:\n              {\n                let newX = prev.x - moveSpeed;\n                if (newX < 0) newX = 0;\n                return {\n                  ...prev,\n                  x: newX\n                };\n              }\n            case BUTTONS.RIGHT:\n              {\n                let newX = prev.x + moveSpeed;\n                if (newX > 100 - ballSize) newX = 100 - ballSize;\n                return {\n                  ...prev,\n                  x: newX\n                };\n              }\n            case BUTTONS.UP:\n              {\n                // Effettua il salto solo se la pallina è sul \"terreno\"\n                if (prev.y === 0) {\n                  return {\n                    ...prev,\n                    velocity: jumpVelocity\n                  };\n                }\n                return prev;\n              }\n            default:\n              return prev;\n          }\n        });\n      }, 15); // intervallo di aggiornamento (ms)\n      return () => clearInterval(interval);\n    }\n  }, [button]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"emu-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ball\",\n      style: {\n        left: `${ball.x}%`,\n        bottom: `${ball.y}%`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n_s(EmuSchermo, \"J1er7c5u8X9FDnk9tWNRPovcLCI=\");\n_c = EmuSchermo;\nexport default EmuSchermo;\nvar _c;\n$RefreshReg$(_c, \"EmuSchermo\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","BUTTONS","A","B","START","SELECT","UP","DOWN","LEFT","RIGHT","EmuSchermo","button","_s","ballSize","moveSpeed","jumpVelocity","gravity","ball","setBall","x","y","velocity","interval","setInterval","prev","newVelocity","newY","clearInterval","newX","className","children","style","left","bottom","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/giuseppebondi/Documents/GitHub/platform/src/components/EmuSchermo.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./EmuSchermo.css\";\n\nconst BUTTONS = {\n  A: 1,\n  B: 2,\n  START: 3,\n  SELECT: 4,\n  UP: 5,\n  DOWN: 6,\n  LEFT: 7,\n  RIGHT: 8,\n};\n\nfunction EmuSchermo({ button }) {\n  // Dimensioni e costanti espresse in percentuali\n\n\n  const ballSize = 5;      // 5% del container\n  const moveSpeed = 2;     // Incremento orizzontale in percentuale\n  const jumpVelocity = 8; // Velocità iniziale del salto (in % per frame)\n  const gravity = -0.5;    // Gravità in % per frame\n  \n\n  // Stato della pallina: x e y sono in percentuale\n  const [ball, setBall] = useState({\n    x: 50 - ballSize / 2, // Centrata orizzontalmente\n    y: 0,               // In posizione \"a terra\" (0% dal fondo)\n    velocity: 0,\n  });\n\n  // Ciclo di animazione per l'aggiornamento verticale (approssimativamente 60 fps)\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setBall(prev => {\n        if (prev.y > 0 || prev.velocity !== 0) {\n          let newVelocity = prev.velocity + gravity;\n          let newY = prev.y + prev.velocity;\n          if (newY < 0) {\n            newY = 0;\n            newVelocity = 0;\n          }\n          return { ...prev, y: newY, velocity: newVelocity };\n        }\n        return prev;\n      });\n    }, 10);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Gestione degli input per muovere la pallina\n  useEffect(() => {\n    if (button) {\n      const interval = setInterval(() => {\n        setBall(prev => {\n          switch (button) {\n            case BUTTONS.LEFT: {\n              let newX = prev.x - moveSpeed;\n              if (newX < 0) newX = 0;\n              return { ...prev, x: newX };\n            }\n            case BUTTONS.RIGHT: {\n              let newX = prev.x + moveSpeed;\n              if (newX > 100 - ballSize) newX = 100 - ballSize;\n              return { ...prev, x: newX };\n            }\n            case BUTTONS.UP: {\n              // Effettua il salto solo se la pallina è sul \"terreno\"\n              if (prev.y === 0) {\n                return { ...prev, velocity: jumpVelocity };\n              }\n              return prev;\n            }\n            default:\n              return prev;\n          }\n        });\n      }, 15); // intervallo di aggiornamento (ms)\n      return () => clearInterval(interval);\n    }\n  }, [button]);\n    \n\n  return (\n    <div className=\"emu-container\">\n      <div\n        className=\"ball\"\n        style={{\n          left: `${ball.x}%`,\n          bottom: `${ball.y}%`,\n        }}\n      ></div>\n    </div>\n  );\n}\n\nexport default EmuSchermo;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,OAAO,GAAG;EACdC,CAAC,EAAE,CAAC;EACJC,CAAC,EAAE,CAAC;EACJC,KAAK,EAAE,CAAC;EACRC,MAAM,EAAE,CAAC;EACTC,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,CAAC;EACPC,IAAI,EAAE,CAAC;EACPC,KAAK,EAAE;AACT,CAAC;AAED,SAASC,UAAUA,CAAC;EAAEC;AAAO,CAAC,EAAE;EAAAC,EAAA;EAC9B;;EAGA,MAAMC,QAAQ,GAAG,CAAC,CAAC,CAAM;EACzB,MAAMC,SAAS,GAAG,CAAC,CAAC,CAAK;EACzB,MAAMC,YAAY,GAAG,CAAC,CAAC,CAAC;EACxB,MAAMC,OAAO,GAAG,CAAC,GAAG,CAAC,CAAI;;EAGzB;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGrB,QAAQ,CAAC;IAC/BsB,CAAC,EAAE,EAAE,GAAGN,QAAQ,GAAG,CAAC;IAAE;IACtBO,CAAC,EAAE,CAAC;IAAgB;IACpBC,QAAQ,EAAE;EACZ,CAAC,CAAC;;EAEF;EACAvB,SAAS,CAAC,MAAM;IACd,MAAMwB,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjCL,OAAO,CAACM,IAAI,IAAI;QACd,IAAIA,IAAI,CAACJ,CAAC,GAAG,CAAC,IAAII,IAAI,CAACH,QAAQ,KAAK,CAAC,EAAE;UACrC,IAAII,WAAW,GAAGD,IAAI,CAACH,QAAQ,GAAGL,OAAO;UACzC,IAAIU,IAAI,GAAGF,IAAI,CAACJ,CAAC,GAAGI,IAAI,CAACH,QAAQ;UACjC,IAAIK,IAAI,GAAG,CAAC,EAAE;YACZA,IAAI,GAAG,CAAC;YACRD,WAAW,GAAG,CAAC;UACjB;UACA,OAAO;YAAE,GAAGD,IAAI;YAAEJ,CAAC,EAAEM,IAAI;YAAEL,QAAQ,EAAEI;UAAY,CAAC;QACpD;QACA,OAAOD,IAAI;MACb,CAAC,CAAC;IACJ,CAAC,EAAE,EAAE,CAAC;IACN,OAAO,MAAMG,aAAa,CAACL,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAxB,SAAS,CAAC,MAAM;IACd,IAAIa,MAAM,EAAE;MACV,MAAMW,QAAQ,GAAGC,WAAW,CAAC,MAAM;QACjCL,OAAO,CAACM,IAAI,IAAI;UACd,QAAQb,MAAM;YACZ,KAAKV,OAAO,CAACO,IAAI;cAAE;gBACjB,IAAIoB,IAAI,GAAGJ,IAAI,CAACL,CAAC,GAAGL,SAAS;gBAC7B,IAAIc,IAAI,GAAG,CAAC,EAAEA,IAAI,GAAG,CAAC;gBACtB,OAAO;kBAAE,GAAGJ,IAAI;kBAAEL,CAAC,EAAES;gBAAK,CAAC;cAC7B;YACA,KAAK3B,OAAO,CAACQ,KAAK;cAAE;gBAClB,IAAImB,IAAI,GAAGJ,IAAI,CAACL,CAAC,GAAGL,SAAS;gBAC7B,IAAIc,IAAI,GAAG,GAAG,GAAGf,QAAQ,EAAEe,IAAI,GAAG,GAAG,GAAGf,QAAQ;gBAChD,OAAO;kBAAE,GAAGW,IAAI;kBAAEL,CAAC,EAAES;gBAAK,CAAC;cAC7B;YACA,KAAK3B,OAAO,CAACK,EAAE;cAAE;gBACf;gBACA,IAAIkB,IAAI,CAACJ,CAAC,KAAK,CAAC,EAAE;kBAChB,OAAO;oBAAE,GAAGI,IAAI;oBAAEH,QAAQ,EAAEN;kBAAa,CAAC;gBAC5C;gBACA,OAAOS,IAAI;cACb;YACA;cACE,OAAOA,IAAI;UACf;QACF,CAAC,CAAC;MACJ,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;MACR,OAAO,MAAMG,aAAa,CAACL,QAAQ,CAAC;IACtC;EACF,CAAC,EAAE,CAACX,MAAM,CAAC,CAAC;EAGZ,oBACEX,OAAA;IAAK6B,SAAS,EAAC,eAAe;IAAAC,QAAA,eAC5B9B,OAAA;MACE6B,SAAS,EAAC,MAAM;MAChBE,KAAK,EAAE;QACLC,IAAI,EAAE,GAAGf,IAAI,CAACE,CAAC,GAAG;QAClBc,MAAM,EAAE,GAAGhB,IAAI,CAACG,CAAC;MACnB;IAAE;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACzB,EAAA,CAhFQF,UAAU;AAAA4B,EAAA,GAAV5B,UAAU;AAkFnB,eAAeA,UAAU;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}