{"ast":null,"code":"var _jsxFileName = \"/Users/giuseppebondi/Documents/GitHub/platform/src/components/EmuSchermo.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./EmuSchermo.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BUTTONS = {\n  A: 1,\n  B: 2,\n  START: 3,\n  SELECT: 4,\n  UP: 5,\n  DOWN: 6,\n  LEFT: 7,\n  RIGHT: 8\n};\nfunction EmuSchermo({\n  button\n}) {\n  _s();\n  // Costanti di fisica espresse in percentuali\n  const ballSize = 5; // dimensione della pallina (in % del container)\n  const horizontalSpeed = 2; // velocità orizzontale fissa (in % per frame)\n  const jumpVelocity = 10; // velocità iniziale del salto (% per frame)\n  const gravity = -0.5; // accelerazione di gravità (% per frame)\n\n  // Stato della pallina: x e y sono posizioni in percentuale,\n  // vx e vy sono le velocità orizzontale e verticale.\n  const [ball, setBall] = useState({\n    x: 50 - ballSize / 2,\n    // centrata orizzontalmente\n    y: 0,\n    // sul \"terreno\"\n    vx: 0,\n    vy: 0\n  });\n\n  // Usiamo un ref per tenere traccia dell'ultimo valore di button\n  const buttonRef = useRef(button);\n  useEffect(() => {\n    buttonRef.current = button;\n  }, [button]);\n\n  // Animazione continua con requestAnimationFrame\n  const animationFrameId = useRef(null);\n  useEffect(() => {\n    const update = () => {\n      setBall(prev => {\n        let {\n          x,\n          y,\n          vx,\n          vy\n        } = prev;\n        const currentButton = buttonRef.current;\n\n        // Se si preme LEFT o RIGHT, imposta la velocità orizzontale,\n        // altrimenti la velocità orizzontale è zero (la pallina sta ferma)\n        if (currentButton === BUTTONS.LEFT) {\n          vx = -horizontalSpeed;\n        } else if (currentButton === BUTTONS.RIGHT) {\n          vx = horizontalSpeed;\n        } else {\n          vx = 0;\n        }\n\n        // Se viene premuto UP e la pallina è sul terreno, inizia il salto\n        if (currentButton === BUTTONS.UP && y === 0) {\n          vy = jumpVelocity;\n        }\n\n        // Applica la gravità alla velocità verticale\n        vy += gravity;\n\n        // Aggiorna le posizioni\n        x += vx;\n        y += vy;\n\n        // Limiti per la posizione orizzontale (il container va da 0 a 100%)\n        if (x < 0) {\n          x = 0;\n        }\n        if (x > 100 - ballSize) {\n          x = 100 - ballSize;\n        }\n\n        // Gestione del \"terreno\": la pallina non può scendere sotto 0\n        if (y < 0) {\n          y = 0;\n          vy = 0;\n        }\n        return {\n          x,\n          y,\n          vx,\n          vy\n        };\n      });\n      animationFrameId.current = requestAnimationFrame(update);\n    };\n    animationFrameId.current = requestAnimationFrame(update);\n    return () => cancelAnimationFrame(animationFrameId.current);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"emu-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ball\",\n      style: {\n        left: `${ball.x}%`,\n        bottom: `${ball.y}%`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n_s(EmuSchermo, \"74Wg1HzWKjZ3sI/phgI3YoRXFpo=\");\n_c = EmuSchermo;\nexport default EmuSchermo;\nvar _c;\n$RefreshReg$(_c, \"EmuSchermo\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","BUTTONS","A","B","START","SELECT","UP","DOWN","LEFT","RIGHT","EmuSchermo","button","_s","ballSize","horizontalSpeed","jumpVelocity","gravity","ball","setBall","x","y","vx","vy","buttonRef","current","animationFrameId","update","prev","currentButton","requestAnimationFrame","cancelAnimationFrame","className","children","style","left","bottom","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/giuseppebondi/Documents/GitHub/platform/src/components/EmuSchermo.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport \"./EmuSchermo.css\";\n\nconst BUTTONS = {\n  A: 1,\n  B: 2,\n  START: 3,\n  SELECT: 4,\n  UP: 5,\n  DOWN: 6,\n  LEFT: 7,\n  RIGHT: 8,\n};\n\nfunction EmuSchermo({ button }) {\n  // Costanti di fisica espresse in percentuali\n  const ballSize = 5;                // dimensione della pallina (in % del container)\n  const horizontalSpeed = 2;         // velocità orizzontale fissa (in % per frame)\n  const jumpVelocity = 10;           // velocità iniziale del salto (% per frame)\n  const gravity = -0.5;              // accelerazione di gravità (% per frame)\n\n  // Stato della pallina: x e y sono posizioni in percentuale,\n  // vx e vy sono le velocità orizzontale e verticale.\n  const [ball, setBall] = useState({\n    x: 50 - ballSize / 2, // centrata orizzontalmente\n    y: 0,                 // sul \"terreno\"\n    vx: 0,\n    vy: 0,\n  });\n\n  // Usiamo un ref per tenere traccia dell'ultimo valore di button\n  const buttonRef = useRef(button);\n  useEffect(() => {\n    buttonRef.current = button;\n  }, [button]);\n\n  // Animazione continua con requestAnimationFrame\n  const animationFrameId = useRef(null);\n  useEffect(() => {\n    const update = () => {\n      setBall(prev => {\n        let { x, y, vx, vy } = prev;\n        const currentButton = buttonRef.current;\n\n        // Se si preme LEFT o RIGHT, imposta la velocità orizzontale,\n        // altrimenti la velocità orizzontale è zero (la pallina sta ferma)\n        if (currentButton === BUTTONS.LEFT) {\n          vx = -horizontalSpeed;\n        } else if (currentButton === BUTTONS.RIGHT) {\n          vx = horizontalSpeed;\n        } else {\n          vx = 0;\n        }\n\n        // Se viene premuto UP e la pallina è sul terreno, inizia il salto\n        if (currentButton === BUTTONS.UP && y === 0) {\n          vy = jumpVelocity;\n        }\n\n        // Applica la gravità alla velocità verticale\n        vy += gravity;\n\n        // Aggiorna le posizioni\n        x += vx;\n        y += vy;\n\n        // Limiti per la posizione orizzontale (il container va da 0 a 100%)\n        if (x < 0) {\n          x = 0;\n        }\n        if (x > 100 - ballSize) {\n          x = 100 - ballSize;\n        }\n\n        // Gestione del \"terreno\": la pallina non può scendere sotto 0\n        if (y < 0) {\n          y = 0;\n          vy = 0;\n        }\n\n        return { x, y, vx, vy };\n      });\n      animationFrameId.current = requestAnimationFrame(update);\n    };\n\n    animationFrameId.current = requestAnimationFrame(update);\n    return () => cancelAnimationFrame(animationFrameId.current);\n  }, []);\n\n  return (\n    <div className=\"emu-container\">\n      <div\n        className=\"ball\"\n        style={{\n          left: `${ball.x}%`,\n          bottom: `${ball.y}%`,\n        }}\n      ></div>\n    </div>\n  );\n}\n\nexport default EmuSchermo;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}