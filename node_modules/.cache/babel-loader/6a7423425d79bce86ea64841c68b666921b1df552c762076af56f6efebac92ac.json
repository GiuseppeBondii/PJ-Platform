{"ast":null,"code":"var _jsxFileName = \"/Users/giuseppebondi/Documents/GitHub/platform/src/components/EmuSchermo.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./EmuSchermo.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BUTTONS = {\n  A: 1,\n  B: 2,\n  START: 3,\n  SELECT: 4,\n  LEFT: 7,\n  RIGHT: 8\n};\nfunction createSeededRandom(seed) {\n  const a = 1664525;\n  const c = 1013904223;\n  const m = 2 ** 32;\n  let state = seed;\n  return function () {\n    state = (a * state + c) % m;\n    return state / m;\n  };\n}\nfunction generateLevel(seed) {\n  const rand = createSeededRandom(seed);\n  const platforms = [];\n  let currentHeight = 20;\n  const maxX = 100;\n  const platformConfig = {\n    typeChance: {\n      p: 0.7,\n      s: 0.3\n    },\n    heightRange: [3, 20],\n    widthRange: [10, 40],\n    spacing: [10, 60]\n  };\n\n  // Scegli un indice casuale per la piattaforma T\n  const tIndex = Math.floor(rand() * 20);\n  for (let i = 0; i < 11; i++) {\n    // Determina il tipo\n    let type;\n    if (i === tIndex) {\n      type = \"T\"; // Piattaforma speciale\n    } else {\n      // Assegna normali piattaforme con probabilitÃ  ridotte\n      const typeRand = rand();\n      type = typeRand < platformConfig.typeChance.s ? 's' : 'p';\n    }\n\n    // Altezza\n    if (i > 0) {\n      const heightIncrement = Math.floor(rand() * (platformConfig.heightRange[1] - platformConfig.heightRange[0] + 1)) + platformConfig.heightRange[0];\n      currentHeight += heightIncrement;\n    }\n\n    // Larghezza e posizione\n    const width = Math.floor(rand() * (platformConfig.widthRange[1] - platformConfig.widthRange[0] + 1)) + platformConfig.widthRange[0];\n    const posStartX = Math.floor(rand() * (maxX - width));\n    const posEndX = posStartX + width;\n    platforms.push({\n      type: type,\n      height: currentHeight,\n      posStartX: posStartX,\n      posEndX: posEndX\n    });\n  }\n  return platforms;\n}\nfunction EmuSchermo({\n  pressedButtons\n}) {\n  _s();\n  const ballSize = 4;\n  const horizontalAcceleration = 0.1;\n  const maxHorizontalSpeed = 1;\n  const friction = 0.2;\n  const jumpVelocity = 6;\n  const gravity = -0.5;\n  const [Level, setLevel] = useState(1);\n  const [ball, setBall] = useState({\n    x: 2,\n    y: 0,\n    vx: 0,\n    vy: 0\n  });\n  const pressedButtonsRef = useRef(pressedButtons);\n  useEffect(() => {\n    pressedButtonsRef.current = pressedButtons;\n  }, [pressedButtons]);\n  const animationFrameId = useRef(null);\n  useEffect(() => {\n    const update = () => {\n      setBall(prev => {\n        const LEVEL = generateLevel(2);\n        let {\n          x,\n          y,\n          vx,\n          vy\n        } = prev;\n        const currentPressedButtons = pressedButtonsRef.current || {};\n\n        // Gestione input orizzontale\n        if (currentPressedButtons[BUTTONS.LEFT]) vx -= horizontalAcceleration;\n        if (currentPressedButtons[BUTTONS.RIGHT]) vx += horizontalAcceleration;\n        if (!currentPressedButtons[BUTTONS.LEFT] && !currentPressedButtons[BUTTONS.RIGHT]) {\n          vx = vx > 0 ? Math.max(vx - friction, 0) : Math.min(vx + friction, 0);\n        }\n        vx = Math.min(Math.max(vx, -maxHorizontalSpeed), maxHorizontalSpeed);\n\n        // Salto solo se a terra o su piattaforma\n        const isOnGroundOrPlatform = prev.y === 0 || LEVEL.some(p => {\n          const platformTop = p.height + 2; // Top della piattaforma (2% di spessore)\n          const horizontalOverlap = prev.x < p.posEndX && prev.x + ballSize > p.posStartX;\n          return prev.y === platformTop && horizontalOverlap;\n        });\n        if (currentPressedButtons[BUTTONS.A] && isOnGroundOrPlatform) {\n          vy = jumpVelocity;\n        }\n        vy += gravity;\n        let newY = y + vy;\n        let newX = x + vx;\n\n        // Collisioni con piattaforme\n        const sortedPlatforms = [...LEVEL].sort((a, b) => b.height - a.height);\n        let collided = false;\n        for (const platform of sortedPlatforms) {\n          const platformTop = platform.height + 2; // Top della piattaforma (2% di spessore)\n          const platformBottom = platform.height; // Base della piattaforma\n\n          // 1. Controllo overlap orizzontale\n          const horizontalOverlap = newX < platform.posEndX && newX + ballSize > platform.posStartX;\n\n          // 2. Controllo overlap verticale\n          const verticalOverlap = newY <= platformTop && newY + ballSize >= platformBottom;\n\n          // 3. Determinazione direzione collisione\n          if (horizontalOverlap && verticalOverlap) {\n            // Calcoliamo la penetrazione verticale\n            const prevBottom = prev.y + ballSize;\n            if (prevBottom <= platformBottom && vy > 0) {\n              // Collisione dal basso (salto contro piattaforma)\n              newY = platformBottom - ballSize;\n              vy = 0;\n            } else if (vy <= 0) {\n              // Collisione dall'alto (atterraggio su piattaforma)\n              newY = platformTop;\n              vy = 0;\n            }\n            collided = true;\n            break;\n          }\n        }\n\n        // Collisione con il terreno solo se non abbiamo colliso con piattaforme\n        if (!collided && newY < 0) {\n          newY = 0;\n          vy = 0;\n        }\n\n        // Clamping orizzontale\n        newX = Math.max(0, Math.min(newX, 100 - ballSize));\n        LEVEL.forEach(platform => {\n          if (platform.type === \"s\") {\n            const spikeLeft = platform.posStartX;\n            const spikeRight = platform.posEndX;\n            const spikeTop = platform.height + 3;\n            const spikeBottom = platform.height;\n            const horizontalCollision = x + ballSize > spikeLeft && x < spikeRight;\n            const verticalCollision = y < spikeTop && y + ballSize > spikeBottom && vy <= 0;\n            if (horizontalCollision && verticalCollision) {\n              newX = 2;\n              newY = 0;\n              vx = 0;\n              vy = 0;\n            }\n          }\n        });\n        return {\n          x: newX,\n          y: newY,\n          vx,\n          vy\n        };\n      });\n      animationFrameId.current = requestAnimationFrame(update);\n    };\n    animationFrameId.current = requestAnimationFrame(update);\n    return () => cancelAnimationFrame(animationFrameId.current);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"emu-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ball\",\n      style: {\n        left: `${ball.x}%`,\n        bottom: `${ball.y}%`,\n        width: `${ballSize}%`,\n        height: `${ballSize + 2}%`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this), LEVEL.map((item, i) => {\n      if (item.type === \"T\") {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"t-platform\",\n          style: {\n            left: `${item.posStartX}%`,\n            width: `${item.posEndX - item.posStartX}%`,\n            bottom: `${item.height}%`,\n            height: \"2%\"\n          }\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 7\n        }, this);\n      } else if (item.type === \"p\") {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"platform\",\n          style: {\n            left: `${item.posStartX}%`,\n            width: `${item.posEndX - item.posStartX}%`,\n            bottom: `${item.height}%`,\n            height: \"2%\"\n          }\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 7\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spike\",\n          style: {\n            left: `${item.posStartX}%`,\n            width: `${item.posEndX - item.posStartX}%`,\n            bottom: `${item.height}%`,\n            height: \"2%\"\n          }\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 7\n        }, this);\n      }\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 231,\n    columnNumber: 5\n  }, this);\n}\n_s(EmuSchermo, \"uMucSga0SCoDGY2lIBidoL2BiGg=\");\n_c = EmuSchermo;\nexport default EmuSchermo;\nvar _c;\n$RefreshReg$(_c, \"EmuSchermo\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","BUTTONS","A","B","START","SELECT","LEFT","RIGHT","createSeededRandom","seed","a","c","m","state","generateLevel","rand","platforms","currentHeight","maxX","platformConfig","typeChance","p","s","heightRange","widthRange","spacing","tIndex","Math","floor","i","type","typeRand","heightIncrement","width","posStartX","posEndX","push","height","EmuSchermo","pressedButtons","_s","ballSize","horizontalAcceleration","maxHorizontalSpeed","friction","jumpVelocity","gravity","Level","setLevel","ball","setBall","x","y","vx","vy","pressedButtonsRef","current","animationFrameId","update","prev","LEVEL","currentPressedButtons","max","min","isOnGroundOrPlatform","some","platformTop","horizontalOverlap","newY","newX","sortedPlatforms","sort","b","collided","platform","platformBottom","verticalOverlap","prevBottom","forEach","spikeLeft","spikeRight","spikeTop","spikeBottom","horizontalCollision","verticalCollision","requestAnimationFrame","cancelAnimationFrame","className","children","style","left","bottom","fileName","_jsxFileName","lineNumber","columnNumber","map","item","_c","$RefreshReg$"],"sources":["/Users/giuseppebondi/Documents/GitHub/platform/src/components/EmuSchermo.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport \"./EmuSchermo.css\";\n\nconst BUTTONS = {\n  A: 1,\n  B: 2,\n  START: 3,\n  SELECT: 4,\n  LEFT: 7,\n  RIGHT: 8,\n};       \n\nfunction createSeededRandom(seed) {\n    const a = 1664525;\n    const c = 1013904223;\n    const m = 2**32;\n    let state = seed;\n    \n    return function() {\n        state = (a * state + c) % m;\n        return state / m;\n    };\n}\n\nfunction generateLevel(seed) {\n    const rand = createSeededRandom(seed);\n    const platforms = [];\n    let currentHeight = 20;\n    const maxX = 100;\n\n    const platformConfig = {\n        typeChance: { p: 0.7, s: 0.3 },     \n        heightRange: [3, 20],               \n        widthRange: [10, 40],             \n        spacing: [10, 60] \n    };\n\n    // Scegli un indice casuale per la piattaforma T\n    const tIndex = Math.floor(rand() * 20);\n\n    for (let i = 0; i < 11; i++) {\n        // Determina il tipo\n        let type;\n        if (i === tIndex) {\n            type = \"T\"; // Piattaforma speciale\n        } else {\n            // Assegna normali piattaforme con probabilitÃ  ridotte\n            const typeRand = rand();\n            type = typeRand < platformConfig.typeChance.s ? 's' : 'p';\n        }\n\n        // Altezza\n        if (i > 0) {\n            const heightIncrement = Math.floor(\n                rand() * (platformConfig.heightRange[1] - platformConfig.heightRange[0] + 1)\n            ) + platformConfig.heightRange[0];\n            currentHeight += heightIncrement;\n        }\n\n        // Larghezza e posizione\n        const width = Math.floor(\n            rand() * (platformConfig.widthRange[1] - platformConfig.widthRange[0] + 1)\n        ) + platformConfig.widthRange[0];\n\n        const posStartX = Math.floor(rand() * (maxX - width));\n        const posEndX = posStartX + width;\n\n        platforms.push({\n            type: type,\n            height: currentHeight,\n            posStartX: posStartX,\n            posEndX: posEndX\n        });\n    }\n\n    return platforms;\n}\n\n\n\nfunction EmuSchermo({ pressedButtons }) {\n  const ballSize = 4;\n  const horizontalAcceleration = 0.1;\n  const maxHorizontalSpeed = 1;\n  const friction = 0.2;\n  const jumpVelocity = 6;\n  const gravity = -0.5;\n  const [Level, setLevel]= useState(1);\n\n  const [ball, setBall] = useState({\n    x: 2,\n    y: 0,\n    vx: 0,\n    vy: 0,\n  });\n\n  const pressedButtonsRef = useRef(pressedButtons);\n  useEffect(() => {\n    pressedButtonsRef.current = pressedButtons;\n  }, [pressedButtons]);\n\n  const animationFrameId = useRef(null);\n\n  useEffect(() => {\n    const update = () => {\n      setBall((prev) => {\n        const LEVEL = generateLevel(2);\n        \n        let { x, y, vx, vy } = prev;\n        const currentPressedButtons = pressedButtonsRef.current || {};\n\n        // Gestione input orizzontale\n        if (currentPressedButtons[BUTTONS.LEFT]) vx -= horizontalAcceleration;\n        if (currentPressedButtons[BUTTONS.RIGHT]) vx += horizontalAcceleration;\n\n        if (!currentPressedButtons[BUTTONS.LEFT] && !currentPressedButtons[BUTTONS.RIGHT]) {\n          vx = vx > 0 ? Math.max(vx - friction, 0) : Math.min(vx + friction, 0);\n        }\n\n        vx = Math.min(Math.max(vx, -maxHorizontalSpeed), maxHorizontalSpeed);\n\n        // Salto solo se a terra o su piattaforma\n        const isOnGroundOrPlatform = \n        prev.y === 0 || \n        LEVEL.some(p => {\n          const platformTop = p.height + 2; // Top della piattaforma (2% di spessore)\n          const horizontalOverlap = (\n            prev.x < p.posEndX && \n            (prev.x + ballSize) > p.posStartX\n          );\n          return prev.y === platformTop && horizontalOverlap;\n        });\n        if (currentPressedButtons[BUTTONS.A] && isOnGroundOrPlatform) {\n          vy = jumpVelocity;\n        }\n\n        vy += gravity;\n        let newY = y + vy;\n        let newX = x + vx;\n\n    // Collisioni con piattaforme\nconst sortedPlatforms = [...LEVEL].sort((a, b) => b.height - a.height);\nlet collided = false;\n\nfor (const platform of sortedPlatforms) {\n    const platformTop = platform.height +2; // Top della piattaforma (2% di spessore)\n    const platformBottom = platform.height;   // Base della piattaforma\n    \n    // 1. Controllo overlap orizzontale\n    const horizontalOverlap = (\n        newX < platform.posEndX && \n        (newX + ballSize) > platform.posStartX\n    );\n    \n    // 2. Controllo overlap verticale\n    const verticalOverlap = (\n        newY <= platformTop && \n        (newY + ballSize) >= platformBottom\n    );\n    \n    // 3. Determinazione direzione collisione\n    if (horizontalOverlap && verticalOverlap) {\n        // Calcoliamo la penetrazione verticale\n        const prevBottom = prev.y + ballSize;\n        \n        if (prevBottom <= platformBottom && vy > 0) {\n            // Collisione dal basso (salto contro piattaforma)\n            newY = platformBottom - ballSize;\n            vy = 0;\n        } else if (vy <= 0) {\n            // Collisione dall'alto (atterraggio su piattaforma)\n            newY = platformTop;\n            vy = 0;\n        }\n        \n        collided = true;\n        break;\n    }\n}\n\n        // Collisione con il terreno solo se non abbiamo colliso con piattaforme\n        if (!collided && newY < 0) {\n            newY = 0;\n            vy = 0;\n        }\n\n        // Clamping orizzontale\n        newX = Math.max(0, Math.min(newX, 100 - ballSize));\n\n\n        LEVEL.forEach(platform => {\n            if (platform.type === \"s\") {\n              const spikeLeft = platform.posStartX;\n              const spikeRight = platform.posEndX;\n              const spikeTop = platform.height + 3;\n              const spikeBottom = platform.height;\n  \n              const horizontalCollision = (\n                x + ballSize > spikeLeft && \n                x < spikeRight\n              );\n              \n              const verticalCollision = (\n                y < spikeTop && \n                y + ballSize > spikeBottom &&\n                vy <=0\n              );\n  \n              if (horizontalCollision && verticalCollision) {\n                newX = 2 ; \n                newY = 0;\n                vx = 0;\n                vy = 0;\n              }\n            }\n          });\n        return { x: newX, y: newY, vx, vy };\n\n      });\n      animationFrameId.current = requestAnimationFrame(update);\n    };\n\n    animationFrameId.current = requestAnimationFrame(update);\n    return () => cancelAnimationFrame(animationFrameId.current);\n\n\n\n  }, []);\n\n  return (\n    <div className=\"emu-container\">\n\n      \n      <div\n        className=\"ball\"\n        style={{\n          left: `${ball.x}%`,\n          bottom: `${ball.y}%`,\n          width: `${ballSize}%`,\n          height: `${ballSize +2 }%`,\n        }}\n      ></div>\n\n{LEVEL.map((item, i) => {\n  if (item.type === \"T\") {\n    return (\n      <div\n        key={i}\n        className=\"t-platform\" \n        style={{\n          left: `${item.posStartX}%`,\n          width: `${item.posEndX - item.posStartX}%`,\n          bottom: `${item.height}%`,\n          height: \"2%\", \n        }}\n      />\n    );\n  } else if (item.type === \"p\") {\n    return (\n      <div\n        key={i}\n        className=\"platform\"\n        style={{\n          left: `${item.posStartX}%`,\n          width: `${item.posEndX - item.posStartX}%`,\n          bottom: `${item.height}%`,\n          height: \"2%\",\n        }}\n      />\n    );\n  } else {\n    return (\n      <div\n        key={i}\n        className=\"spike\"\n        style={{\n          left: `${item.posStartX}%`,\n          width: `${item.posEndX - item.posStartX}%`,\n          bottom: `${item.height}%`,\n          height: \"2%\",\n        }}\n      />\n    );\n  }\n})}\n    </div>\n  );\n}\n\nexport default EmuSchermo;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}