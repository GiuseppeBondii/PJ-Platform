{"ast":null,"code":"var _jsxFileName = \"/Users/giuseppebondi/Documents/GitHub/platform/src/components/EmuSchermo.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./EmuSchermo.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BUTTONS = {\n  A: 1,\n  B: 2,\n  START: 3,\n  SELECT: 4,\n  UP: 5,\n  DOWN: 6,\n  LEFT: 7,\n  RIGHT: 8\n};\nfunction EmuSchermo({\n  button\n}) {\n  _s();\n  // Dimensioni della \"scene\" e della pallina\n  const containerWidth = 300;\n  const containerHeight = 300;\n  const ballSize = 20;\n\n  // Costanti per il movimento\n  const gravity = -0.5; // Forza di gravità\n  const jumpVelocity = 15; // Velocità iniziale del salto\n  const moveSpeed = 10; // Spostamento orizzontale per input\n\n  // Stato unificato per la pallina: posizione (x, y) e velocità verticale\n  const [ball, setBall] = useState({\n    x: containerWidth / 2 - ballSize / 2,\n    y: 0,\n    velocity: 0\n  });\n\n  // Ciclo di animazione per il salto (60 fps approssimativamente)\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setBall(prev => {\n        // Aggiorna solo se la pallina è in aria o si sta muovendo verticalmente\n        if (prev.y > 0 || prev.velocity !== 0) {\n          let newVelocity = prev.velocity + gravity;\n          let newY = prev.y + prev.velocity;\n          if (newY < 0) {\n            newY = 0;\n            newVelocity = 0;\n          }\n          return {\n            ...prev,\n            y: newY,\n            velocity: newVelocity\n          };\n        }\n        return prev;\n      });\n    }, 16);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Gestione degli input in base al prop \"button\"\n  useEffect(() => {\n    if (button) {\n      setBall(prev => {\n        switch (button) {\n          case BUTTONS.LEFT:\n            {\n              let newX = prev.x - moveSpeed;\n              if (newX < 0) newX = 0;\n              return {\n                ...prev,\n                x: newX\n              };\n            }\n          case BUTTONS.RIGHT:\n            {\n              let newX = prev.x + moveSpeed;\n              if (newX > containerWidth - ballSize) newX = containerWidth - ballSize;\n              return {\n                ...prev,\n                x: newX\n              };\n            }\n          case BUTTONS.UP:\n            {\n              // Effettua il salto solo se la pallina è sul \"terreno\"\n              if (prev.y === 0) {\n                return {\n                  ...prev,\n                  velocity: jumpVelocity\n                };\n              }\n              return prev;\n            }\n          default:\n            return prev;\n        }\n      });\n    }\n  }, [button]);\n\n  // Stili per il contenitore e la pallina\n  const containerStyle = {\n    position: \"relative\",\n    width: `${containerWidth}px`,\n    height: `${containerHeight}px`,\n    border: \"1px solid black\",\n    background: \"#eee\",\n    overflow: \"hidden\"\n  };\n  const ballStyle = {\n    position: \"absolute\",\n    width: `${ballSize}px`,\n    height: `${ballSize}px`,\n    borderRadius: \"50%\",\n    backgroundColor: \"red\",\n    left: `${ball.x}px`,\n    bottom: `${ball.y}px`\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: containerStyle,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: ballStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 7\n  }, this);\n}\n_s(EmuSchermo, \"9AmnxdWr8SzOPitq6irRaitNCNg=\");\n_c = EmuSchermo;\nexport default EmuSchermo;\nvar _c;\n$RefreshReg$(_c, \"EmuSchermo\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","BUTTONS","A","B","START","SELECT","UP","DOWN","LEFT","RIGHT","EmuSchermo","button","_s","containerWidth","containerHeight","ballSize","gravity","jumpVelocity","moveSpeed","ball","setBall","x","y","velocity","interval","setInterval","prev","newVelocity","newY","clearInterval","newX","containerStyle","position","width","height","border","background","overflow","ballStyle","borderRadius","backgroundColor","left","bottom","style","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/giuseppebondi/Documents/GitHub/platform/src/components/EmuSchermo.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./EmuSchermo.css\";\n\nconst BUTTONS = {\n    A: 1,\n    B: 2,\n    START: 3,\n    SELECT: 4,\n    UP: 5,\n    DOWN: 6,\n    LEFT: 7,\n    RIGHT: 8,\n  };\n  \n  function EmuSchermo({ button }) {\n    // Dimensioni della \"scene\" e della pallina\n    const containerWidth = 300;\n    const containerHeight = 300;\n    const ballSize = 20;\n    \n    // Costanti per il movimento\n    const gravity = -0.5;      // Forza di gravità\n    const jumpVelocity = 15;   // Velocità iniziale del salto\n    const moveSpeed = 10;      // Spostamento orizzontale per input\n  \n    // Stato unificato per la pallina: posizione (x, y) e velocità verticale\n    const [ball, setBall] = useState({\n      x: containerWidth / 2 - ballSize / 2,\n      y: 0,\n      velocity: 0,\n    });\n  \n    // Ciclo di animazione per il salto (60 fps approssimativamente)\n    useEffect(() => {\n      const interval = setInterval(() => {\n        setBall(prev => {\n          // Aggiorna solo se la pallina è in aria o si sta muovendo verticalmente\n          if (prev.y > 0 || prev.velocity !== 0) {\n            let newVelocity = prev.velocity + gravity;\n            let newY = prev.y + prev.velocity;\n            if (newY < 0) {\n              newY = 0;\n              newVelocity = 0;\n            }\n            return { ...prev, y: newY, velocity: newVelocity };\n          }\n          return prev;\n        });\n      }, 16);\n      return () => clearInterval(interval);\n    }, []);\n  \n    // Gestione degli input in base al prop \"button\"\n    useEffect(() => {\n      if (button) {\n        setBall(prev => {\n          switch (button) {\n            case BUTTONS.LEFT: {\n              let newX = prev.x - moveSpeed;\n              if (newX < 0) newX = 0;\n              return { ...prev, x: newX };\n            }\n            case BUTTONS.RIGHT: {\n              let newX = prev.x + moveSpeed;\n              if (newX > containerWidth - ballSize)\n                newX = containerWidth - ballSize;\n              return { ...prev, x: newX };\n            }\n            case BUTTONS.UP: {\n              // Effettua il salto solo se la pallina è sul \"terreno\"\n              if (prev.y === 0) {\n                return { ...prev, velocity: jumpVelocity };\n              }\n              return prev;\n            }\n            default:\n              return prev;\n          }\n        });\n      }\n    }, [button]);\n  \n    // Stili per il contenitore e la pallina\n    const containerStyle = {\n      position: \"relative\",\n      width: `${containerWidth}px`,\n      height: `${containerHeight}px`,\n      border: \"1px solid black\",\n      background: \"#eee\",\n      overflow: \"hidden\",\n    };\n  \n    const ballStyle = {\n      position: \"absolute\",\n      width: `${ballSize}px`,\n      height: `${ballSize}px`,\n      borderRadius: \"50%\",\n      backgroundColor: \"red\",\n      left: `${ball.x}px`,\n      bottom: `${ball.y}px`,\n    };\n  \n    return (\n      <div style={containerStyle}>\n        <div style={ballStyle}></div>\n      </div>\n    );\n  }\n  \n  export default EmuSchermo;\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}