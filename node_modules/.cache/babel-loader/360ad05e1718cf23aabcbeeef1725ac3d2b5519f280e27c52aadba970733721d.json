{"ast":null,"code":"var _jsxFileName = \"/Users/giuseppebondi/Documents/GitHub/PJ-Platform/src/components/EmuSchermo.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './SlotTime.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BUTTONS = {\n  A: 1,\n  B: 2,\n  START: 3,\n  SELECT: 4,\n  LEFT: 7,\n  RIGHT: 8\n};\nfunction SlotTime({\n  timeSlot,\n  onSlotComplete,\n  pressedButtons\n}) {\n  _s();\n  const [selectedBet, setSelectedBet] = useState(timeSlot);\n  const [animating, setAnimating] = useState(false);\n  const [result, setResult] = useState(null); // { multiplier, winnings }\n\n  useEffect(() => {\n    // Se siamo in animazione o il risultato è già stato calcolato, non rispondiamo agli input\n    if (animating || result !== null) return;\n\n    // Gestione degli input dai bottoni on-screen tramite la proprietà pressedButtons\n    if (pressedButtons !== null && pressedButtons !== void 0 && pressedButtons[BUTTONS.LEFT]) {\n      setSelectedBet(prev => Math.max(prev - 1, 0));\n    } else if (pressedButtons !== null && pressedButtons !== void 0 && pressedButtons[BUTTONS.RIGHT]) {\n      setSelectedBet(prev => Math.min(prev + 1, timeSlot));\n    } else if (pressedButtons !== null && pressedButtons !== void 0 && pressedButtons[BUTTONS.A]) {\n      // Avvia l'animazione della slot\n      setAnimating(true);\n      setTimeout(() => {\n        // Calcolo del risultato: moltiplicatore casuale tra 0 e 3\n        const multipliers = [0, 1, 2, 3];\n        const randomMultiplier = multipliers[Math.floor(Math.random() * multipliers.length)];\n        const winnings = selectedBet * randomMultiplier;\n        setResult({\n          multiplier: randomMultiplier,\n          winnings\n        });\n        setAnimating(false);\n      }, 2000); // durata dell'animazione: 2 secondi\n    }\n  }, [pressedButtons, animating, result, selectedBet, timeSlot]);\n\n  // Gestione del click per uscire dal componente, solo se il risultato è stato calcolato\n  const handleClick = () => {\n    if (result !== null) {\n      onSlotComplete(result.winnings);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"slot-overlay\",\n    onClick: handleClick,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `slot-container ${animating ? 'animate' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Slot Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Tempo residuo (monete): \", timeSlot]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Puntata selezionata: \", selectedBet]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), !animating && result === null && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"instructions\",\n        children: \"Usa i bottoni sullo schermo (LEFT/RIGHT) per modificare la puntata e premi A per confermare.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), animating && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"animation-text\",\n        children: \"Animazione in corso...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), result !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result\",\n        children: [result.multiplier > 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Hai vinto! Moltiplicatore: \", result.multiplier, \" - Vincita: \", result.winnings]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Non hai vinto, riprova!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Clicca per continuare...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(SlotTime, \"9onNDMaWo+4AehpiI4Es8AZkC+Q=\");\n_c = SlotTime;\nexport default SlotTime;\nvar _c;\n$RefreshReg$(_c, \"SlotTime\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","BUTTONS","A","B","START","SELECT","LEFT","RIGHT","SlotTime","timeSlot","onSlotComplete","pressedButtons","_s","selectedBet","setSelectedBet","animating","setAnimating","result","setResult","prev","Math","max","min","setTimeout","multipliers","randomMultiplier","floor","random","length","winnings","multiplier","handleClick","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/giuseppebondi/Documents/GitHub/PJ-Platform/src/components/EmuSchermo.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './SlotTime.css';\n\nconst BUTTONS = {\n  A: 1,\n  B: 2,\n  START: 3,\n  SELECT: 4,\n  LEFT: 7,\n  RIGHT: 8,\n};\n\nfunction SlotTime({ timeSlot, onSlotComplete, pressedButtons }) {\n  const [selectedBet, setSelectedBet] = useState(timeSlot);\n  const [animating, setAnimating] = useState(false);\n  const [result, setResult] = useState(null); // { multiplier, winnings }\n\n  useEffect(() => {\n    // Se siamo in animazione o il risultato è già stato calcolato, non rispondiamo agli input\n    if (animating || result !== null) return;\n\n    // Gestione degli input dai bottoni on-screen tramite la proprietà pressedButtons\n    if (pressedButtons?.[BUTTONS.LEFT]) {\n      setSelectedBet(prev => Math.max(prev - 1, 0));\n    } else if (pressedButtons?.[BUTTONS.RIGHT]) {\n      setSelectedBet(prev => Math.min(prev + 1, timeSlot));\n    } else if (pressedButtons?.[BUTTONS.A]) {\n      // Avvia l'animazione della slot\n      setAnimating(true);\n      setTimeout(() => {\n        // Calcolo del risultato: moltiplicatore casuale tra 0 e 3\n        const multipliers = [0, 1, 2, 3];\n        const randomMultiplier = multipliers[Math.floor(Math.random() * multipliers.length)];\n        const winnings = selectedBet * randomMultiplier;\n        setResult({ multiplier: randomMultiplier, winnings });\n        setAnimating(false);\n      }, 2000); // durata dell'animazione: 2 secondi\n    }\n  }, [pressedButtons, animating, result, selectedBet, timeSlot]);\n\n  // Gestione del click per uscire dal componente, solo se il risultato è stato calcolato\n  const handleClick = () => {\n    if (result !== null) {\n      onSlotComplete(result.winnings);\n    }\n  };\n\n  return (\n    <div className=\"slot-overlay\" onClick={handleClick}>\n      <div className={`slot-container ${animating ? 'animate' : ''}`}>\n        <h2>Slot Game</h2>\n        <p>Tempo residuo (monete): {timeSlot}</p>\n        <p>Puntata selezionata: {selectedBet}</p>\n\n        {(!animating && result === null) && (\n          <p className=\"instructions\">\n            Usa i bottoni sullo schermo (LEFT/RIGHT) per modificare la puntata e premi A per confermare.\n          </p>\n        )}\n\n        {animating && (\n          <p className=\"animation-text\">Animazione in corso...</p>\n        )}\n\n        {result !== null && (\n          <div className=\"result\">\n            {result.multiplier > 0 ? (\n              <p>Hai vinto! Moltiplicatore: {result.multiplier} - Vincita: {result.winnings}</p>\n            ) : (\n              <p>Non hai vinto, riprova!</p>\n            )}\n            <p>Clicca per continuare...</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default SlotTime;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}