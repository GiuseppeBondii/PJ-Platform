{"ast":null,"code":"var _jsxFileName = \"/Users/giuseppebondi/Documents/GitHub/platform/src/components/EmuSchermo.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./EmuSchermo.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BUTTONS = {\n  A: 1,\n  B: 2,\n  START: 3,\n  SELECT: 4,\n  LEFT: 7,\n  RIGHT: 8\n};\nconst LEVEL = [{\n  type: \"p\",\n  height: 20,\n  posStartX: 30,\n  posEndX: 50\n}, {\n  type: \"p\",\n  height: 35,\n  posStartX: 50,\n  posEndX: 70\n}, {\n  type: \"s\",\n  height: 60,\n  posStartX: 70,\n  posEndX: 90\n}, {\n  type: \"p\",\n  height: 60,\n  posStartX: 20,\n  posEndX: 60\n}];\nfunction EmuSchermo({\n  pressedButtons\n}) {\n  _s();\n  const [lives, setLives] = useState(3);\n  const [resetCounter, setResetCounter] = useState(0);\n  const ballSize = 4;\n  const horizontalAcceleration = 0.1;\n  const maxHorizontalSpeed = 1;\n  const friction = 0.2;\n  const jumpVelocity = 6;\n  const gravity = -0.5;\n  const [ball, setBall] = useState({\n    x: 50 - ballSize / 2,\n    y: 0,\n    vx: 0,\n    vy: 0\n  });\n  const pressedButtonsRef = useRef(pressedButtons);\n  useEffect(() => {\n    pressedButtonsRef.current = pressedButtons;\n  }, [pressedButtons]);\n  const animationFrameId = useRef(null);\n  useEffect(() => {\n    const update = () => {\n      setBall(prev => {\n        let {\n          x,\n          y,\n          vx,\n          vy\n        } = prev;\n        const currentPressedButtons = pressedButtonsRef.current || {};\n\n        // Gestione input orizzontale\n        if (currentPressedButtons[BUTTONS.LEFT]) vx -= horizontalAcceleration;\n        if (currentPressedButtons[BUTTONS.RIGHT]) vx += horizontalAcceleration;\n        if (!currentPressedButtons[BUTTONS.LEFT] && !currentPressedButtons[BUTTONS.RIGHT]) {\n          vx = vx > 0 ? Math.max(vx - friction, 0) : Math.min(vx + friction, 0);\n        }\n        vx = Math.min(Math.max(vx, -maxHorizontalSpeed), maxHorizontalSpeed);\n\n        // Salto solo se a terra o su piattaforma\n        const isOnGroundOrPlatform = prev.y === 0 || LEVEL.some(p => {\n          const platformTop = p.height + 2; // Top della piattaforma (2% di spessore)\n          const horizontalOverlap = prev.x < p.posEndX && prev.x + ballSize > p.posStartX;\n          return prev.y === platformTop && horizontalOverlap;\n        });\n        if (currentPressedButtons[BUTTONS.A] && isOnGroundOrPlatform) {\n          vy = jumpVelocity;\n        }\n        vy += gravity;\n        let newY = y + vy;\n        let newX = x + vx;\n\n        // Collisioni con piattaforme\n        const sortedPlatforms = [...LEVEL].sort((a, b) => b.height - a.height);\n        let collided = false;\n        for (const platform of sortedPlatforms) {\n          const platformTop = platform.height + 2; // Top della piattaforma (2% di spessore)\n          const platformBottom = platform.height; // Base della piattaforma\n\n          // 1. Controllo overlap orizzontale\n          const horizontalOverlap = newX < platform.posEndX && newX + ballSize > platform.posStartX;\n\n          // 2. Controllo overlap verticale\n          const verticalOverlap = newY <= platformTop && newY + ballSize >= platformBottom;\n\n          // 3. Determinazione direzione collisione\n          if (horizontalOverlap && verticalOverlap) {\n            // Calcoliamo la penetrazione verticale\n            const prevBottom = prev.y + ballSize;\n            if (prevBottom <= platformBottom && vy > 0) {\n              // Collisione dal basso (salto contro piattaforma)\n              newY = platformBottom - ballSize;\n              vy = 0;\n            } else if (vy <= 0) {\n              // Collisione dall'alto (atterraggio su piattaforma)\n              newY = platformTop;\n              vy = 0;\n            }\n            collided = true;\n            break;\n          }\n        }\n\n        // Collisione con il terreno solo se non abbiamo colliso con piattaforme\n        if (!collided && newY < 0) {\n          newY = 0;\n          vy = 0;\n        }\n\n        // Clamping orizzontale\n        newX = Math.max(0, Math.min(newX, 100 - ballSize));\n        LEVEL.forEach(platform => {\n          if (platform.type === \"s\") {\n            const spikeLeft = platform.posStartX;\n            const spikeRight = platform.posEndX;\n            const spikeTop = platform.height + 2;\n            const spikeBottom = platform.height;\n            const horizontalCollision = x + ballSize > spikeLeft && x < spikeRight;\n            const verticalCollision = y < spikeTop && y + ballSize > spikeBottom;\n            if (horizontalCollision && verticalCollision) {\n              setLives(prev => Math.max(prev - 1, 0));\n              x = 50 - ballSize / 2; // Resetta posizione\n              y = 0;\n              vx = 0;\n              vy = 0;\n              setResetCounter(c => c + 1); // Forza re-render\n            }\n          }\n        });\n\n        // Resetta il gioco quando le vite finiscono\n        if (lives === 0) {\n          setLives(3);\n          x = 50 - ballSize / 2;\n          y = 0;\n          vx = 0;\n          vy = 0;\n        }\n        return {\n          x,\n          y,\n          vx,\n          vy\n        };\n      });\n      animationFrameId.current = requestAnimationFrame(update);\n    };\n    animationFrameId.current = requestAnimationFrame(update);\n    return () => cancelAnimationFrame(animationFrameId.current);\n  }, [resetCounter]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"emu-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lives-counter\",\n      children: '❤️'.repeat(lives).padEnd(3, '🖤')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ball\",\n      style: {\n        left: `${ball.x}%`,\n        bottom: `${ball.y}%`,\n        width: `${ballSize}%`,\n        height: `${ballSize + 2}%`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), LEVEL.map((item, i) => item.type === \"p\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"platform\",\n      style: {\n        left: `${item.posStartX}%`,\n        width: `${item.posEndX - item.posStartX}%`,\n        bottom: `${item.height}%`,\n        height: \"2%\"\n      }\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spike\",\n      style: {\n        left: `${item.posStartX}%`,\n        width: `${item.posEndX - item.posStartX}%`,\n        bottom: `${item.height}%`,\n        height: \"5%\"\n      }\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 5\n  }, this);\n}\n_s(EmuSchermo, \"yse44gOu54ETeca/kOBj2p9hy0o=\");\n_c = EmuSchermo;\nexport default EmuSchermo;\nvar _c;\n$RefreshReg$(_c, \"EmuSchermo\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","BUTTONS","A","B","START","SELECT","LEFT","RIGHT","LEVEL","type","height","posStartX","posEndX","EmuSchermo","pressedButtons","_s","lives","setLives","resetCounter","setResetCounter","ballSize","horizontalAcceleration","maxHorizontalSpeed","friction","jumpVelocity","gravity","ball","setBall","x","y","vx","vy","pressedButtonsRef","current","animationFrameId","update","prev","currentPressedButtons","Math","max","min","isOnGroundOrPlatform","some","p","platformTop","horizontalOverlap","newY","newX","sortedPlatforms","sort","a","b","collided","platform","platformBottom","verticalOverlap","prevBottom","forEach","spikeLeft","spikeRight","spikeTop","spikeBottom","horizontalCollision","verticalCollision","c","requestAnimationFrame","cancelAnimationFrame","className","children","repeat","padEnd","fileName","_jsxFileName","lineNumber","columnNumber","style","left","bottom","width","map","item","i","_c","$RefreshReg$"],"sources":["/Users/giuseppebondi/Documents/GitHub/platform/src/components/EmuSchermo.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport \"./EmuSchermo.css\";\n\nconst BUTTONS = {\n  A: 1,\n  B: 2,\n  START: 3,\n  SELECT: 4,\n  LEFT: 7,\n  RIGHT: 8,\n};\n\nconst LEVEL = [\n  { type: \"p\", height: 20, posStartX: 30, posEndX: 50 },\n  { type: \"p\", height: 35, posStartX: 50, posEndX: 70 },\n  { type: \"s\", height: 60, posStartX: 70, posEndX: 90 },\n  { type: \"p\", height: 60, posStartX: 20, posEndX: 60 },\n];\n\nfunction EmuSchermo({ pressedButtons }) {\n    const [lives, setLives] = useState(3);\n    const [resetCounter, setResetCounter] = useState(0);\n  const ballSize = 4;\n  const horizontalAcceleration = 0.1;\n  const maxHorizontalSpeed = 1;\n  const friction = 0.2;\n  const jumpVelocity = 6;\n  const gravity = -0.5;\n\n  const [ball, setBall] = useState({\n    x: 50 - ballSize / 2,\n    y: 0,\n    vx: 0,\n    vy: 0,\n  });\n\n  const pressedButtonsRef = useRef(pressedButtons);\n  useEffect(() => {\n    pressedButtonsRef.current = pressedButtons;\n  }, [pressedButtons]);\n\n  const animationFrameId = useRef(null);\n\n  useEffect(() => {\n    const update = () => {\n      setBall((prev) => {\n        let { x, y, vx, vy } = prev;\n        const currentPressedButtons = pressedButtonsRef.current || {};\n\n        // Gestione input orizzontale\n        if (currentPressedButtons[BUTTONS.LEFT]) vx -= horizontalAcceleration;\n        if (currentPressedButtons[BUTTONS.RIGHT]) vx += horizontalAcceleration;\n\n        if (!currentPressedButtons[BUTTONS.LEFT] && !currentPressedButtons[BUTTONS.RIGHT]) {\n          vx = vx > 0 ? Math.max(vx - friction, 0) : Math.min(vx + friction, 0);\n        }\n\n        vx = Math.min(Math.max(vx, -maxHorizontalSpeed), maxHorizontalSpeed);\n\n        // Salto solo se a terra o su piattaforma\n        const isOnGroundOrPlatform = \n        prev.y === 0 || \n        LEVEL.some(p => {\n          const platformTop = p.height + 2; // Top della piattaforma (2% di spessore)\n          const horizontalOverlap = (\n            prev.x < p.posEndX && \n            (prev.x + ballSize) > p.posStartX\n          );\n          return prev.y === platformTop && horizontalOverlap;\n        });\n        if (currentPressedButtons[BUTTONS.A] && isOnGroundOrPlatform) {\n          vy = jumpVelocity;\n        }\n\n        vy += gravity;\n        let newY = y + vy;\n        let newX = x + vx;\n\n    // Collisioni con piattaforme\nconst sortedPlatforms = [...LEVEL].sort((a, b) => b.height - a.height);\nlet collided = false;\n\nfor (const platform of sortedPlatforms) {\n    const platformTop = platform.height +2; // Top della piattaforma (2% di spessore)\n    const platformBottom = platform.height;   // Base della piattaforma\n    \n    // 1. Controllo overlap orizzontale\n    const horizontalOverlap = (\n        newX < platform.posEndX && \n        (newX + ballSize) > platform.posStartX\n    );\n    \n    // 2. Controllo overlap verticale\n    const verticalOverlap = (\n        newY <= platformTop && \n        (newY + ballSize) >= platformBottom\n    );\n    \n    // 3. Determinazione direzione collisione\n    if (horizontalOverlap && verticalOverlap) {\n        // Calcoliamo la penetrazione verticale\n        const prevBottom = prev.y + ballSize;\n        \n        if (prevBottom <= platformBottom && vy > 0) {\n            // Collisione dal basso (salto contro piattaforma)\n            newY = platformBottom - ballSize;\n            vy = 0;\n        } else if (vy <= 0) {\n            // Collisione dall'alto (atterraggio su piattaforma)\n            newY = platformTop;\n            vy = 0;\n        }\n        \n        collided = true;\n        break;\n    }\n}\n\n        // Collisione con il terreno solo se non abbiamo colliso con piattaforme\n        if (!collided && newY < 0) {\n            newY = 0;\n            vy = 0;\n        }\n\n        // Clamping orizzontale\n        newX = Math.max(0, Math.min(newX, 100 - ballSize));\n\n\n        LEVEL.forEach(platform => {\n            if (platform.type === \"s\") {\n              const spikeLeft = platform.posStartX;\n              const spikeRight = platform.posEndX;\n              const spikeTop = platform.height + 2;\n              const spikeBottom = platform.height;\n  \n              const horizontalCollision = (\n                x + ballSize > spikeLeft && \n                x < spikeRight\n              );\n              \n              const verticalCollision = (\n                y < spikeTop && \n                y + ballSize > spikeBottom\n              );\n  \n              if (horizontalCollision && verticalCollision) {\n                setLives(prev => Math.max(prev - 1, 0));\n                x = 50 - ballSize / 2; // Resetta posizione\n                y = 0;\n                vx = 0;\n                vy = 0;\n                setResetCounter(c => c + 1); // Forza re-render\n              }\n            }\n          });\n  \n          // Resetta il gioco quando le vite finiscono\n          if (lives === 0) {\n            setLives(3);\n            x = 50 - ballSize / 2;\n            y = 0;\n            vx = 0;\n            vy = 0;\n          }\n          return { x, y, vx, vy };\n      });\n      animationFrameId.current = requestAnimationFrame(update);\n    };\n\n    animationFrameId.current = requestAnimationFrame(update);\n    return () => cancelAnimationFrame(animationFrameId.current);\n\n\n\n  }, [resetCounter]);\n\n  return (\n    <div className=\"emu-container\">\n      <div className=\"lives-counter\">\n        {'❤️'.repeat(lives).padEnd(3, '🖤')}\n      </div>\n      \n      <div\n        className=\"ball\"\n        style={{\n          left: `${ball.x}%`,\n          bottom: `${ball.y}%`,\n          width: `${ballSize}%`,\n          height: `${ballSize +2 }%`,\n        }}\n      ></div>\n\n      {LEVEL.map((item, i) => (\n        item.type === \"p\" ? (\n          <div\n            key={i}\n            className=\"platform\"\n            style={{\n              left: `${item.posStartX}%`,\n              width: `${item.posEndX - item.posStartX}%`,\n              bottom: `${item.height}%`,\n              height: \"2%\",\n            }}\n          />\n        ) : (\n          <div\n            key={i}\n            className=\"spike\"\n            style={{\n              left: `${item.posStartX}%`,\n              width: `${item.posEndX - item.posStartX}%`,\n              bottom: `${item.height}%`,\n              height: \"5%\",\n            }}\n          />\n        )\n      ))}\n    </div>\n  );\n}\n\nexport default EmuSchermo;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}